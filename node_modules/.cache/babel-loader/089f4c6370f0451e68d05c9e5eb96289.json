{"ast":null,"code":"var _jsxFileName = \"/Users/jesus.esteban/Workspace/f1/src/components/map/map.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Map, TileLayer } from 'react-leaflet';\nimport Control from 'react-leaflet-control';\nconst stamenTonerTiles = 'https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png'; // Ejemplos de mapas https://leaflet-extras.github.io/leaflet-providers/preview/\n\nconst stamenTonerAttr = 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>';\nconst mapCenter = [40.1301919, -8.2008354];\nconst zoomLevel = 3;\nconst MRData = [];\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentZoomLevel: zoomLevel,\n      CircuitTable: []\n    };\n    this.handleUpPanClick = this.handleUpPanClick.bind(this);\n    this.handleRightPanClick = this.handleRightPanClick.bind(this);\n    this.handleLeftPanClick = this.handleLeftPanClick.bind(this);\n    this.handleDownPanClick = this.handleDownPanClick.bind(this);\n  }\n\n  componentDidMount() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.on('zoomend', () => {\n      const updatedZoomLevel = leafletMap.getZoom();\n      this.handleZoomLevelChange(updatedZoomLevel);\n    });\n    fetch(\"https://ergast.com/api/f1/circuits.json?limit=100\").then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        CircuitTable: result.CircuitTable\n      });\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  handleZoomLevelChange(newZoomLevel) {\n    this.setState({\n      currentZoomLevel: newZoomLevel\n    });\n  }\n\n  handleUpPanClick() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.panBy([0, -100]);\n    window.console.log('Panning up');\n  }\n\n  handleRightPanClick() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.panBy([100, 0]);\n    window.console.log('Panning right');\n  }\n\n  handleLeftPanClick() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.panBy([-100, 0]);\n    window.console.log('Panning left');\n  }\n\n  handleDownPanClick() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.panBy([0, 100]);\n    window.console.log('Panning down');\n  }\n\n  render() {\n    window.console.log('this.state.currentZoomLevel ->', this.state.currentZoomLevel);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Map, {\n      ref: m => {\n        this.leafletMap = m;\n      },\n      center: mapCenter,\n      zoom: zoomLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: stamenTonerAttr,\n      url: stamenTonerTiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Control, {\n      position: \"topright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, CircuitTable.map(item => React.createElement(\"li\", {\n      key: item.Circuits,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, item.Circuits))), React.createElement(\"div\", {\n      style: {\n        marginLeft: '37px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleUpPanClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Pan up\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleLeftPanClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Pan left\"), React.createElement(\"button\", {\n      onClick: this.handleRightPanClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Pan right\")), React.createElement(\"div\", {\n      style: {\n        marginLeft: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleDownPanClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Pan down\"))))));\n  }\n\n}\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136\n  },\n  __self: this\n}), document.getElementById('mount'));","map":{"version":3,"sources":["/Users/jesus.esteban/Workspace/f1/src/components/map/map.js"],"names":["React","Component","render","Map","TileLayer","Control","stamenTonerTiles","stamenTonerAttr","mapCenter","zoomLevel","MRData","App","constructor","props","state","currentZoomLevel","CircuitTable","handleUpPanClick","bind","handleRightPanClick","handleLeftPanClick","handleDownPanClick","componentDidMount","leafletMap","leafletElement","on","updatedZoomLevel","getZoom","handleZoomLevelChange","fetch","then","res","json","result","setState","isLoaded","error","newZoomLevel","panBy","window","console","log","m","map","item","Circuits","marginLeft","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Map, TileLayer } from 'react-leaflet';\nimport Control from 'react-leaflet-control';\n\nconst stamenTonerTiles = 'https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png';\n// Ejemplos de mapas https://leaflet-extras.github.io/leaflet-providers/preview/\nconst stamenTonerAttr = 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>';\nconst mapCenter = [40.1301919, -8.2008354];\nconst zoomLevel = 3;\n\nconst MRData = [];\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            currentZoomLevel: zoomLevel,\n            CircuitTable: []            \n        };\n        this.handleUpPanClick = this.handleUpPanClick.bind(this);\n        this.handleRightPanClick = this.handleRightPanClick.bind(this);\n        this.handleLeftPanClick = this.handleLeftPanClick.bind(this);\n        this.handleDownPanClick = this.handleDownPanClick.bind(this);\n    }\n\n    componentDidMount() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.on('zoomend', () => {\n            const updatedZoomLevel = leafletMap.getZoom();\n            this.handleZoomLevelChange(updatedZoomLevel);\n        });\n\n        fetch(\"https://ergast.com/api/f1/circuits.json?limit=100\")\n        .then(res => res.json())\n        .then(\n          (result) => {\n            this.setState({\n              isLoaded: true,\n              CircuitTable: result.CircuitTable\n            });\n          },\n          // Note: it's important to handle errors here\n          // instead of a catch() block so that we don't swallow\n          // exceptions from actual bugs in components.\n          (error) => {\n            this.setState({\n              isLoaded: true,\n              error\n            });\n          }\n        )        \n    }\n\n    handleZoomLevelChange(newZoomLevel) {\n        this.setState({ currentZoomLevel: newZoomLevel });\n    }\n\n    handleUpPanClick() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.panBy([0, -100]);\n        window.console.log('Panning up');\n    }\n\n    handleRightPanClick() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.panBy([100, 0]);\n        window.console.log('Panning right');\n    }\n\n    handleLeftPanClick() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.panBy([-100, 0]);\n        window.console.log('Panning left');\n    }\n\n    handleDownPanClick() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.panBy([0, 100]);\n        window.console.log('Panning down');\n    }\n\n    render() {\n        window.console.log('this.state.currentZoomLevel ->', this.state.currentZoomLevel);\n\n        return (\n            <div>\n                <Map\n                    ref={m => { this.leafletMap = m; }}\n                    center={mapCenter}\n                    zoom={zoomLevel}\n                >\n                    <TileLayer\n                        attribution={stamenTonerAttr}\n                        url={stamenTonerTiles}\n                    />\n                    <Control position=\"topright\">\n                        <div>\n\n                            <ul>\n                            {CircuitTable.map(item => (\n                                <li key={item.Circuits}>\n                                {item.Circuits}\n                                </li>\n                            ))}\n                            </ul>\n\n\n                            <div style={{ marginLeft: '37px' }}>\n                                <button onClick={this.handleUpPanClick}>\n                                    Pan up\n                                </button>\n                            </div>\n                            <div>\n                                <button onClick={this.handleLeftPanClick}>\n                                    Pan left\n                                </button>\n                                <button onClick={this.handleRightPanClick}>\n                                    Pan right\n                                </button>\n                            </div>\n                            <div style={{ marginLeft: '30px' }}>\n                                <button onClick={this.handleDownPanClick}>\n                                    Pan down\n                                </button>\n                            </div>\n                        </div>\n                    </Control>\n                </Map>\n            </div>\n        );\n    }\n}\n\nrender(\n    <App />,\n    document.getElementById('mount')\n);\n"]},"metadata":{},"sourceType":"module"}