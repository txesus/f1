{"ast":null,"code":"var _jsxFileName = \"/Users/jesus.esteban/Workspace/f1/src/components/map/map.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Map, TileLayer } from 'react-leaflet';\nimport Control from 'react-leaflet-control';\nconst stamenTonerTiles = 'https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png'; // Ejemplos de mapas https://leaflet-extras.github.io/leaflet-providers/preview/\n\nconst stamenTonerAttr = 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>';\nconst mapCenter = [40.1301919, -8.2008354];\nconst zoomLevel = 3;\nconst resultados = [];\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentZoomLevel: zoomLevel,\n      resultados: [],\n      resultApi: resultados.MRData.CircuitTable.Circuits\n    };\n    this.handleUpPanClick = this.handleUpPanClick.bind(this);\n    this.handleRightPanClick = this.handleRightPanClick.bind(this);\n    this.handleLeftPanClick = this.handleLeftPanClick.bind(this);\n    this.handleDownPanClick = this.handleDownPanClick.bind(this);\n  }\n\n  componentDidMount() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.on('zoomend', () => {\n      const updatedZoomLevel = leafletMap.getZoom();\n      this.handleZoomLevelChange(updatedZoomLevel);\n    });\n  }\n\n  componentWillMount() {\n    fetch('https://ergast.com/api/f1/circuits.json?limit=100').then(response => {\n      return response.json();\n    }).then(item => {\n      this.setState({\n        resultados: item\n      });\n    });\n  }\n\n  handleZoomLevelChange(newZoomLevel) {\n    this.setState({\n      currentZoomLevel: newZoomLevel\n    });\n  }\n\n  handleUpPanClick() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.panBy([0, -100]);\n    window.console.log('Panning up');\n  }\n\n  handleRightPanClick() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.panBy([100, 0]);\n    window.console.log('Panning right');\n  }\n\n  handleLeftPanClick() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.panBy([-100, 0]);\n    window.console.log('Panning left');\n  }\n\n  handleDownPanClick() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.panBy([0, 100]);\n    window.console.log('Panning down');\n  }\n\n  render() {\n    // window.console.log('this.state.currentZoomLevel ->', this.state.currentZoomLevel);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Map, {\n      ref: m => {\n        this.leafletMap = m;\n      },\n      center: mapCenter,\n      zoom: zoomLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: stamenTonerAttr,\n      url: stamenTonerTiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Control, {\n      position: \"topright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      border: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"circuitName\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"locality\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"country\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.state.resultApi.map(item => {\n      return React.createElement(\"tr\", {\n        key: item.MRData.CircuitTable.circuitName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, item.MRData.CircuitTable.circuitName));\n    }))), React.createElement(\"div\", {\n      style: {\n        marginLeft: '37px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleUpPanClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Pan up\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleLeftPanClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Pan left\"), React.createElement(\"button\", {\n      onClick: this.handleRightPanClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Pan right\")), React.createElement(\"div\", {\n      style: {\n        marginLeft: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleDownPanClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Pan down\"))))));\n  }\n\n}\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 146\n  },\n  __self: this\n}), document.getElementById('mount'));","map":{"version":3,"sources":["/Users/jesus.esteban/Workspace/f1/src/components/map/map.js"],"names":["React","Component","render","Map","TileLayer","Control","stamenTonerTiles","stamenTonerAttr","mapCenter","zoomLevel","resultados","App","constructor","props","state","currentZoomLevel","resultApi","MRData","CircuitTable","Circuits","handleUpPanClick","bind","handleRightPanClick","handleLeftPanClick","handleDownPanClick","componentDidMount","leafletMap","leafletElement","on","updatedZoomLevel","getZoom","handleZoomLevelChange","componentWillMount","fetch","then","response","json","item","setState","newZoomLevel","panBy","window","console","log","m","map","circuitName","marginLeft","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Map, TileLayer } from 'react-leaflet';\nimport Control from 'react-leaflet-control';\n\nconst stamenTonerTiles = 'https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png';\n// Ejemplos de mapas https://leaflet-extras.github.io/leaflet-providers/preview/\nconst stamenTonerAttr = 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>';\nconst mapCenter = [40.1301919, -8.2008354];\nconst zoomLevel = 3;\nconst resultados = [];\n\n\nexport default class App extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            currentZoomLevel: zoomLevel,\n            resultados: [],\n            resultApi: resultados.MRData.CircuitTable.Circuits\n        };\n        this.handleUpPanClick = this.handleUpPanClick.bind(this);\n        this.handleRightPanClick = this.handleRightPanClick.bind(this);\n        this.handleLeftPanClick = this.handleLeftPanClick.bind(this);\n        this.handleDownPanClick = this.handleDownPanClick.bind(this);\n    }\n    componentDidMount() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.on('zoomend', () => {\n            const updatedZoomLevel = leafletMap.getZoom();\n            this.handleZoomLevelChange(updatedZoomLevel);\n        });    \n    }\n\n    componentWillMount() {\n        fetch('https://ergast.com/api/f1/circuits.json?limit=100')\n          .then((response) => {\n            return response.json()\n          })\n          .then((item) => {\n            this.setState({ resultados: item })\n          })    \n      }\n\n\n\n    handleZoomLevelChange(newZoomLevel) {\n        this.setState({ currentZoomLevel: newZoomLevel });\n    }\n\n    handleUpPanClick() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.panBy([0, -100]);\n        window.console.log('Panning up');\n    }\n\n    handleRightPanClick() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.panBy([100, 0]);\n        window.console.log('Panning right');\n    }\n\n    handleLeftPanClick() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.panBy([-100, 0]);\n        window.console.log('Panning left');\n    }\n\n    handleDownPanClick() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.panBy([0, 100]);\n        window.console.log('Panning down');\n    }\n\n    render() {\n        // window.console.log('this.state.currentZoomLevel ->', this.state.currentZoomLevel);\n\n        return (\n            <div>\n                <Map\n                    ref={m => { this.leafletMap = m; }}\n                    center={mapCenter}\n                    zoom={zoomLevel}\n                >\n                    <TileLayer\n                        attribution={stamenTonerAttr}\n                        url={stamenTonerTiles}\n                    />\n                    <Control position=\"topright\">\n                        <div>\n\n\n                        <table border=\"1\">\n                            <thead>\n                                <tr>\n                                    <th>circuitName</th>\n                                    <th>locality</th>\n                                    <th>country</th>                    \n                                </tr>\n                            </thead>\n                            <tbody>  \n                                {this.state.resultApi.map(item => {\n                                    return (\n                                        <tr key={item.MRData.CircuitTable.circuitName}>\n                                            <td>{item.MRData.CircuitTable.circuitName}</td>\n                                            {/* <td>{item.descripcion}</td>\n                                            <td>{item.precio}</td> */}\n                                      </tr>\n                                    );\n                                })}\n                            </tbody>\n                        </table>\n\n\n\n\n\n                            <div style={{ marginLeft: '37px' }}>\n                                <button onClick={this.handleUpPanClick}>\n                                    Pan up\n                                </button>\n                            </div>\n                            <div>\n                                <button onClick={this.handleLeftPanClick}>\n                                    Pan left\n                                </button>\n                                <button onClick={this.handleRightPanClick}>\n                                    Pan right\n                                </button>\n                            </div>\n                            <div style={{ marginLeft: '30px' }}>\n                                <button onClick={this.handleDownPanClick}>\n                                    Pan down\n                                </button>\n                            </div>\n                        </div>\n                    </Control>\n                </Map>\n            </div>\n        );\n    }\n}\n\nrender(\n    <App />,\n    document.getElementById('mount')\n);\n"]},"metadata":{},"sourceType":"module"}