{"ast":null,"code":"var _jsxFileName = \"/Users/jesus.esteban/Workspace/f1/src/components/map/map.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Map, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport Control from 'react-leaflet-control'; // Map Styles\n// const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjna67hy23vcf2rppfpvoj24q/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\nconst stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjyn1qsf100x61cpk2cjvnvij/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw'; // const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjynakrxe1jzk1cqco7zdva6j/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\nconst mapCenter = [26.9837669, -60.2810849];\nconst zoomLevel = 2.5;\nconst polyline = [[41.57, 2.26111], [-37.8497, 144.968]];\nconst multiPolyline = [[[41.57, 2.26111], [-37.8497, 144.968]], [[-37.8497, 144.968], [26.0325, 50.5106]]];\nexport default class CircuitMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getYearCircuits = year => {\n      fetch('http://ergast.com/api/f1/' + year + '/circuits.json?limit=100').then(response => {\n        return response.json();\n      }).then(resultados => {\n        this.setState({\n          resultados: resultados.MRData.CircuitTable.Circuits\n        });\n      });\n    };\n\n    this.state = {\n      currentZoomLevel: zoomLevel,\n      resultados: []\n    };\n    this.handleResetZoom = this.handleResetZoom.bind(this);\n  }\n\n  componentDidMount() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.on('zoomend', () => {\n      const updatedZoomLevel = leafletMap.getZoom();\n      this.handleZoomLevelChange(updatedZoomLevel);\n    });\n    this.getYearCircuits(this.props.year);\n    console.log('entro por aqui');\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.year !== this.props.year) {\n      this.getYearCircuits(this.props.year);\n    }\n  }\n\n  handleZoomLevelChange(newZoomLevel) {\n    this.setState({\n      currentZoomLevel: newZoomLevel\n    });\n  }\n\n  handleResetZoom(newZoomLevel) {\n    this.setState({\n      newZoomLevel: newZoomLevel\n    });\n  }\n\n  render() {\n    const resultados = this.state.resultados;\n    console.log(multiPolyline);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Map, {\n      ref: m => {\n        this.leafletMap = m;\n      },\n      center: mapCenter,\n      zoom: zoomLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"JesÃºs Esteban\",\n      url: stamenTonerTiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), resultados.map(resultados => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        position: [resultados.Location.lat, resultados.Location.long],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, resultados.circuitName)), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, resultados.Location.locality, \" \"), \"/\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \" \", resultados.Location.country)), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: resultados.url,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Wikipedia\"))))));\n    }), React.createElement(Control, {\n      position: \"topright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginLeft: '37px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleResetZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Reset Zoom\"))))));\n  }\n\n} // Recursos\n// https://towardsdatascience.com/creating-a-bubbles-map-using-react-leaflet-e75124ca1cd2\n// Ejemplos de mapas https://leaflet-extras.github.io/leaflet-providers/preview/\n// https://github.com/humangeo/leaflet-dvf/wiki/2.-Examples\n// http://www.liedman.net/leaflet-routing-machine/\n// http://rowanwins.github.io/leaflet-easyPrint/\n// https://github.com/dwilhelm89/Leaflet.StyleEditor","map":{"version":3,"sources":["/Users/jesus.esteban/Workspace/f1/src/components/map/map.js"],"names":["React","Component","render","Map","TileLayer","Marker","Popup","Polyline","Control","stamenTonerTiles","mapCenter","zoomLevel","polyline","multiPolyline","CircuitMap","constructor","props","getYearCircuits","year","fetch","then","response","json","resultados","setState","MRData","CircuitTable","Circuits","state","currentZoomLevel","handleResetZoom","bind","componentDidMount","leafletMap","leafletElement","on","updatedZoomLevel","getZoom","handleZoomLevelChange","console","log","componentDidUpdate","prevProps","newZoomLevel","m","map","Location","lat","long","circuitName","locality","country","url","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Map, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport Control from 'react-leaflet-control';\n\n// Map Styles\n// const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjna67hy23vcf2rppfpvoj24q/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\nconst stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjyn1qsf100x61cpk2cjvnvij/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjynakrxe1jzk1cqco7zdva6j/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\nconst mapCenter = [26.9837669, -60.2810849];\nconst zoomLevel = 2.5;\n\nconst polyline = [[41.57, 2.26111], [-37.8497, 144.968]];\n\nconst multiPolyline = [\n    [[41.57, 2.26111], [-37.8497, 144.968]],\n    [[-37.8497, 144.968], [26.0325, 50.5106]],\n];\n\n\nexport default class CircuitMap extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            currentZoomLevel: zoomLevel,\n            resultados: []\n        };\n        this.handleResetZoom = this.handleResetZoom.bind(this);\n    }\n\n\n    componentDidMount() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.on('zoomend', () => {\n            const updatedZoomLevel = leafletMap.getZoom();\n            this.handleZoomLevelChange(updatedZoomLevel);\n        });     \n        this.getYearCircuits(this.props.year);\n        console.log('entro por aqui')\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.year !== this.props.year){\n            this.getYearCircuits(this.props.year);\n        }\n    }\n\n\n\n    getYearCircuits = year => {\n        fetch('http://ergast.com/api/f1/' + year + '/circuits.json?limit=100')\n            .then((response) => {\n            return response.json()\n            })\n            .then((resultados) => {\n            this.setState({ resultados: resultados.MRData.CircuitTable.Circuits})\n        })\n    }\n\n\n    handleZoomLevelChange(newZoomLevel) {\n        this.setState({ currentZoomLevel: newZoomLevel });\n    }\n\n    handleResetZoom(newZoomLevel) {\n        this.setState({ newZoomLevel: newZoomLevel });\n    }\n\n\n        \n    render() {\n\n        const { resultados} = this.state;\n        console.log(multiPolyline);\n\n\n        return (\n            <div>\n                <Map\n                    ref={m => { this.leafletMap = m; }}\n                    center={mapCenter}\n                    zoom={zoomLevel}\n                    >\n                <TileLayer\n                    attribution={\"JesÃºs Esteban\"}\n                    url={stamenTonerTiles}\n                    />\n\n                {resultados.map((resultados) => {\n                    return (\n                        <React.Fragment>\n                            <Marker \n                                position={[resultados.Location.lat, resultados.Location.long]}\n                            >\n                                <Popup>\n                                    <ul className={\"list-popup\"}>\n                                        <li className={\"title\"}><span>{resultados.circuitName}</span></li>\n                                        <li>\n                                            <span>{resultados.Location.locality} </span>\n                                            /\n                                            <span> {resultados.Location.country}</span>\n                                        </li>\n                                        <li>\n                                            <a href={resultados.url} target=\"_blank\">Wikipedia</a>\n                                        </li>\n                                    </ul>\n                                    \n                                </Popup>\n                            </Marker>     \n                            {/* <Polyline color=\"#F1C40F\"  weight=\"1\" positions=\n                            {[\n                                [[resultados.Location.lat, resultados.Location.long], [-37.8497, 144.968]],\n                                [[-37.8497, 144.968], [26.0325, 50.5106]]\n                            ]} \n                            /> */}\n                        </React.Fragment>                        \n                    )\n                    })\n                }                \n\n\n                <Control position=\"topright\">\n                    <div>\n                        <div style={{ marginLeft: '37px' }}>\n                            <button onClick={this.handleResetZoom}>\n                                Reset Zoom\n                            </button>\n                        </div>\n                    </div>\n                </Control>\n                </Map>\n            </div>\n        );\n    }\n}\n\n\n\n\n\n\n\n// Recursos\n// https://towardsdatascience.com/creating-a-bubbles-map-using-react-leaflet-e75124ca1cd2\n// Ejemplos de mapas https://leaflet-extras.github.io/leaflet-providers/preview/\n// https://github.com/humangeo/leaflet-dvf/wiki/2.-Examples\n// http://www.liedman.net/leaflet-routing-machine/\n// http://rowanwins.github.io/leaflet-easyPrint/\n// https://github.com/dwilhelm89/Leaflet.StyleEditor"]},"metadata":{},"sourceType":"module"}