{"ast":null,"code":"var _jsxFileName = \"/Users/jesus.esteban/Workspace/f1/src/map/map.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Map, TileLayer } from 'react-leaflet';\nimport Control from 'react-leaflet-control';\nconst stamenTonerTiles = 'http://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}.png';\nconst stamenTonerAttr = 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>';\nconst mapCenter = [40.1301919, -8.2008354];\nconst zoomLevel = 2;\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentZoomLevel: zoomLevel\n    };\n    this.handleUpPanClick = this.handleUpPanClick.bind(this);\n    this.handleRightPanClick = this.handleRightPanClick.bind(this);\n    this.handleLeftPanClick = this.handleLeftPanClick.bind(this);\n    this.handleDownPanClick = this.handleDownPanClick.bind(this);\n  }\n\n  componentDidMount() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.on('zoomend', () => {\n      const updatedZoomLevel = leafletMap.getZoom();\n      this.handleZoomLevelChange(updatedZoomLevel);\n    });\n  }\n\n  handleZoomLevelChange(newZoomLevel) {\n    this.setState({\n      currentZoomLevel: newZoomLevel\n    });\n  }\n\n  handleUpPanClick() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.panBy([0, -100]);\n    window.console.log('Panning up');\n  }\n\n  handleRightPanClick() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.panBy([100, 0]);\n    window.console.log('Panning right');\n  }\n\n  handleLeftPanClick() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.panBy([-100, 0]);\n    window.console.log('Panning left');\n  }\n\n  handleDownPanClick() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.panBy([0, 100]);\n    window.console.log('Panning down');\n  }\n\n  render() {\n    window.console.log('this.state.currentZoomLevel ->', this.state.currentZoomLevel);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Map, {\n      ref: m => {\n        this.leafletMap = m;\n      },\n      center: mapCenter,\n      zoom: zoomLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: stamenTonerAttr,\n      url: stamenTonerTiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Control, {\n      position: \"topright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'black',\n        padding: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginLeft: '37px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleUpPanClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Pan up\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleLeftPanClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Pan left\"), React.createElement(\"button\", {\n      onClick: this.handleRightPanClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Pan right\")), React.createElement(\"div\", {\n      style: {\n        marginLeft: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleDownPanClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Pan down\"))))));\n  }\n\n}\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}), document.getElementById('mount'));","map":{"version":3,"sources":["/Users/jesus.esteban/Workspace/f1/src/map/map.js"],"names":["React","Component","render","Map","TileLayer","Control","stamenTonerTiles","stamenTonerAttr","mapCenter","zoomLevel","App","constructor","props","state","currentZoomLevel","handleUpPanClick","bind","handleRightPanClick","handleLeftPanClick","handleDownPanClick","componentDidMount","leafletMap","leafletElement","on","updatedZoomLevel","getZoom","handleZoomLevelChange","newZoomLevel","setState","panBy","window","console","log","m","backgroundColor","padding","marginLeft","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Map, TileLayer } from 'react-leaflet';\nimport Control from 'react-leaflet-control';\n\nconst stamenTonerTiles = 'http://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}.png';\nconst stamenTonerAttr = 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>';\nconst mapCenter = [40.1301919, -8.2008354];\nconst zoomLevel = 2;\n\nexport default class App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { currentZoomLevel: zoomLevel };\n        this.handleUpPanClick = this.handleUpPanClick.bind(this);\n        this.handleRightPanClick = this.handleRightPanClick.bind(this);\n        this.handleLeftPanClick = this.handleLeftPanClick.bind(this);\n        this.handleDownPanClick = this.handleDownPanClick.bind(this);\n    }\n\n    componentDidMount() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.on('zoomend', () => {\n            const updatedZoomLevel = leafletMap.getZoom();\n            this.handleZoomLevelChange(updatedZoomLevel);\n        });\n    }\n\n    handleZoomLevelChange(newZoomLevel) {\n        this.setState({ currentZoomLevel: newZoomLevel });\n    }\n\n    handleUpPanClick() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.panBy([0, -100]);\n        window.console.log('Panning up');\n    }\n\n    handleRightPanClick() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.panBy([100, 0]);\n        window.console.log('Panning right');\n    }\n\n    handleLeftPanClick() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.panBy([-100, 0]);\n        window.console.log('Panning left');\n    }\n\n    handleDownPanClick() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.panBy([0, 100]);\n        window.console.log('Panning down');\n    }\n\n    render() {\n        window.console.log('this.state.currentZoomLevel ->', this.state.currentZoomLevel);\n\n        return (\n            <div>\n                <Map\n                    ref={m => { this.leafletMap = m; }}\n                    center={mapCenter}\n                    zoom={zoomLevel}\n                >\n                    <TileLayer\n                        attribution={stamenTonerAttr}\n                        url={stamenTonerTiles}\n                    />\n                    <Control position=\"topright\">\n                        <div\n                            style={{\n                                backgroundColor: 'black',\n                                padding: '5px',\n                            }}\n                        >\n                            <div style={{ marginLeft: '37px' }}>\n                                <button onClick={this.handleUpPanClick}>\n                                    Pan up\n                                </button>\n                            </div>\n                            <div>\n                                <button onClick={this.handleLeftPanClick}>\n                                    Pan left\n                                </button>\n                                <button onClick={this.handleRightPanClick}>\n                                    Pan right\n                                </button>\n                            </div>\n                            <div style={{ marginLeft: '30px' }}>\n                                <button onClick={this.handleDownPanClick}>\n                                    Pan down\n                                </button>\n                            </div>\n                        </div>\n                    </Control>\n                </Map>\n            </div>\n        );\n    }\n}\n\nrender(\n    <App />,\n    document.getElementById('mount')\n);\n"]},"metadata":{},"sourceType":"module"}