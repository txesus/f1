{"ast":null,"code":"var _jsxFileName = \"/Users/jesus.esteban/Workspace/f1/src/components/map/map.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport Control from 'react-leaflet-control'; // Map Styles\n\nconst stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjna67hy23vcf2rppfpvoj24q/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw'; // const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjyn1qsf100x61cpk2cjvnvij/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjynakrxe1jzk1cqco7zdva6j/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\nconst mapCenter = [26.9837669, -60.2810849];\nconst zoomLevel = 2.5;\nconst polyline = [[41.57, 2.26111], [-37.8497, 144.968]];\nconst multiPolyline = [[[41.57, 2.26111], [-37.8497, 144.968]], [[-37.8497, 144.968], [26.0325, 50.5106]]];\nexport default class CircuitMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentZoomLevel: zoomLevel,\n      circuits: []\n    };\n    this.handleClickMarker = this.handleClickMarker.bind(this);\n    this.handleResetZoom = this.handleResetZoom.bind(this);\n  }\n\n  componentDidMount() {// const leafletMap = this.leafletMap.leafletElement;\n    // leafletMap.on('zoomend', () => {\n    //     const updatedZoomLevel = leafletMap.getZoom();\n    //     this.handleZoomLevelChange(updatedZoomLevel);\n    // });     \n  }\n\n  handleZoomLevelChange(newZoomLevel) {\n    this.setState({\n      currentZoomLevel: newZoomLevel\n    });\n  }\n\n  handleResetZoom(newZoomLevel) {\n    this.setState({\n      newZoomLevel: newZoomLevel\n    });\n  }\n\n  handleClickMarker(newZoomLevel) {\n    console.log(this.map.props = newZoomLevel.latlng); // console.log(this.map.props);\n    // console.log(this.map.props.center);\n    // console.log(this.map.props.zoom);\n  }\n\n  getPolyLineArray() {\n    const circuitsCoordinates = this.props.circuits.map(circuit => {\n      return [circuit.Location.lat, circuit.Location.long];\n    });\n    return circuitsCoordinates;\n  }\n\n  render() {\n    const circuits = this.props.circuits;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Map, {\n      ref: ref => {\n        this.map = ref;\n      },\n      center: mapCenter,\n      zoom: zoomLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"JesÃºs Esteban\",\n      url: stamenTonerTiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), circuits.map(circuit => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        position: [circuit.Location.lat, circuit.Location.long],\n        onClick: this.handleClickMarker,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }));\n    }), React.createElement(Polyline, {\n      color: \"#F1C40F\",\n      weight: \"1\",\n      positions: this.getPolyLineArray(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Control, {\n      position: \"topright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginLeft: '37px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleResetZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Reset Zoom\"))))));\n  }\n\n} // Recursos\n// https://towardsdatascience.com/creating-a-bubbles-map-using-react-leaflet-e75124ca1cd2\n// Ejemplos de mapas https://leaflet-extras.github.io/leaflet-providers/preview/\n// https://github.com/humangeo/leaflet-dvf/wiki/2.-Examples\n// http://www.liedman.net/leaflet-routing-machine/\n// http://rowanwins.github.io/leaflet-easyPrint/\n// https://github.com/dwilhelm89/Leaflet.StyleEditor","map":{"version":3,"sources":["/Users/jesus.esteban/Workspace/f1/src/components/map/map.js"],"names":["React","Component","Map","TileLayer","Marker","Popup","Polyline","Control","stamenTonerTiles","mapCenter","zoomLevel","polyline","multiPolyline","CircuitMap","constructor","props","state","currentZoomLevel","circuits","handleClickMarker","bind","handleResetZoom","componentDidMount","handleZoomLevelChange","newZoomLevel","setState","console","log","map","latlng","getPolyLineArray","circuitsCoordinates","circuit","Location","lat","long","render","ref","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport Control from 'react-leaflet-control';\n\n// Map Styles\nconst stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjna67hy23vcf2rppfpvoj24q/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjyn1qsf100x61cpk2cjvnvij/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjynakrxe1jzk1cqco7zdva6j/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\nconst mapCenter = [26.9837669, -60.2810849];\nconst zoomLevel = 2.5;\n\nconst polyline = [[41.57, 2.26111], [-37.8497, 144.968]];\n\nconst multiPolyline = [\n    [[41.57, 2.26111], [-37.8497, 144.968]],\n    [[-37.8497, 144.968], [26.0325, 50.5106]],\n];\n\n\nexport default class CircuitMap extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            currentZoomLevel: zoomLevel,\n            circuits: []\n        };\n        this.handleClickMarker = this.handleClickMarker.bind(this)\n        this.handleResetZoom = this.handleResetZoom.bind(this);\n    }\n\n\n    componentDidMount() {\n        // const leafletMap = this.leafletMap.leafletElement;\n        // leafletMap.on('zoomend', () => {\n        //     const updatedZoomLevel = leafletMap.getZoom();\n        //     this.handleZoomLevelChange(updatedZoomLevel);\n        // });     \n    }\n\n\n    handleZoomLevelChange(newZoomLevel) {\n        this.setState({ currentZoomLevel: newZoomLevel });\n    }\n\n    handleResetZoom(newZoomLevel) {\n        this.setState({ newZoomLevel: newZoomLevel });\n    }\n\n    \n    \n    handleClickMarker(newZoomLevel){\n        console.log(this.map.props = newZoomLevel.latlng);\n        // console.log(this.map.props);\n        // console.log(this.map.props.center);\n        // console.log(this.map.props.zoom);\n    }\n\n\n\n\n\n    getPolyLineArray() {\n        const circuitsCoordinates = this.props.circuits.map(circuit => {\n            return [circuit.Location.lat, circuit.Location.long];\n        });\n        return circuitsCoordinates;\n    }\n\n\n\n    \n        \n    render() {\n\n        const { circuits} = this.props;\n\n        return (\n            <div>\n                <Map\n                    ref={(ref) => { this.map = ref; }}\n                    center={mapCenter}\n                    zoom={zoomLevel}\n                    >\n                <TileLayer\n                    attribution={\"JesÃºs Esteban\"}\n                    url={stamenTonerTiles}\n                    />\n\n                {circuits.map((circuit) => {\n                    return (\n                        <React.Fragment>\n                            <Marker \n                                position={[circuit.Location.lat, circuit.Location.long]}\n                                onClick={this.handleClickMarker}   \n                            >\n                                {/* <Popup>\n                                    <ul className={\"list-popup\"}>\n                                        <li className={\"title\"}><span>{circuit.circuitName}</span></li>\n                                        <li>\n                                            <span>{circuit.Location.locality} </span>\n                                            /\n                                            <span> {circuit.Location.country}</span>\n                                        </li>\n                                        <li>\n                                            <a href={circuit.url} target=\"_blank\">Wikipedia</a>\n                                        </li>\n                                    </ul>\n                                    \n                                </Popup> */}\n                            </Marker>     \n                        </React.Fragment>                        \n                    )\n                    })\n                }                \n\n                <Polyline color=\"#F1C40F\"  weight=\"1\" positions={this.getPolyLineArray()}/>\n\n\n\n\n                <Control position=\"topright\">\n                    <div>\n                        <div style={{ marginLeft: '37px' }}>\n                            <button onClick={this.handleResetZoom}>\n                                Reset Zoom\n                            </button>\n                        </div>\n                    </div>\n                </Control>\n                </Map>\n            </div>\n        );\n    }\n}\n\n\n\n\n\n\n\n// Recursos\n// https://towardsdatascience.com/creating-a-bubbles-map-using-react-leaflet-e75124ca1cd2\n// Ejemplos de mapas https://leaflet-extras.github.io/leaflet-providers/preview/\n// https://github.com/humangeo/leaflet-dvf/wiki/2.-Examples\n// http://www.liedman.net/leaflet-routing-machine/\n// http://rowanwins.github.io/leaflet-easyPrint/\n// https://github.com/dwilhelm89/Leaflet.StyleEditor"]},"metadata":{},"sourceType":"module"}