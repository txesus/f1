{"ast":null,"code":"var _jsxFileName = \"/Users/jesus.esteban/Workspace/f1/src/components/map/map.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport Control from 'react-leaflet-control'; // Map Styles\n//const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjna67hy23vcf2rppfpvoj24q/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\nconst stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjyn1qsf100x61cpk2cjvnvij/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw'; // const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjynakrxe1jzk1cqco7zdva6j/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\nconst mapCenter = [39.9837669, -4.2810849];\nconst zoomLevel = 2.5;\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentZoomLevel: zoomLevel,\n      resultados: []\n    };\n    this.handleResetZoom = this.handleResetZoom.bind(this);\n  }\n\n  componentDidMount() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.on('zoomend', () => {\n      const updatedZoomLevel = leafletMap.getZoom();\n      this.handleZoomLevelChange(updatedZoomLevel);\n    });\n  }\n\n  componentWillMount() {\n    fetch('http://ergast.com/api/f1/' + '2019' + '/circuits.json?limit=100').then(response => {\n      return response.json();\n    }).then(resultados => {\n      this.setState({\n        resultados: resultados.MRData.CircuitTable.Circuits\n      });\n    });\n  }\n\n  handleZoomLevelChange(newZoomLevel) {\n    this.setState({\n      currentZoomLevel: newZoomLevel\n    });\n  }\n\n  handleResetZoom(newZoomLevel) {\n    this.setState({\n      newZoomLevel: newZoomLevel\n    });\n  }\n\n  render() {\n    const resultados = this.state.resultados;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Map, {\n      ref: m => {\n        this.leafletMap = m;\n      },\n      center: mapCenter,\n      zoom: zoomLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"JesÃºs Esteban\",\n      url: stamenTonerTiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), resultados.map(resultados => {\n      return React.createElement(Marker, {\n        position: [resultados.Location.lat, resultados.Location.long],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, resultados.circuitName)), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, resultados.Location.locality, \" \"), \"/\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \" \", resultados.Location.country)), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: resultados.url,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Wikipedia\")))));\n    }), React.createElement(Control, {\n      position: \"topright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginLeft: '37px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleResetZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Reset Zoom\"))))));\n  }\n\n}\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}), document.getElementById('mount')); // Recursos\n// https://towardsdatascience.com/creating-a-bubbles-map-using-react-leaflet-e75124ca1cd2\n// Ejemplos de mapas https://leaflet-extras.github.io/leaflet-providers/preview/","map":{"version":3,"sources":["/Users/jesus.esteban/Workspace/f1/src/components/map/map.js"],"names":["React","Component","render","Map","TileLayer","Marker","Popup","Control","stamenTonerTiles","mapCenter","zoomLevel","App","constructor","props","state","currentZoomLevel","resultados","handleResetZoom","bind","componentDidMount","leafletMap","leafletElement","on","updatedZoomLevel","getZoom","handleZoomLevelChange","componentWillMount","fetch","then","response","json","setState","MRData","CircuitTable","Circuits","newZoomLevel","m","map","Location","lat","long","circuitName","locality","country","url","marginLeft","document","getElementById"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport Control from 'react-leaflet-control';\n\n// Map Styles\n//const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjna67hy23vcf2rppfpvoj24q/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\nconst stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjyn1qsf100x61cpk2cjvnvij/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjynakrxe1jzk1cqco7zdva6j/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\nconst mapCenter = [39.9837669, -4.2810849];\nconst zoomLevel = 2.5;\n\nexport default class App extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            currentZoomLevel: zoomLevel,\n            resultados: []\n        };\n        this.handleResetZoom = this.handleResetZoom.bind(this);\n    }\n\n\n    componentDidMount() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.on('zoomend', () => {\n            const updatedZoomLevel = leafletMap.getZoom();\n            this.handleZoomLevelChange(updatedZoomLevel);\n        });     \n    }\n\n    componentWillMount() {\n        fetch('http://ergast.com/api/f1/' + '2019' + '/circuits.json?limit=100')\n          .then((response) => {\n            return response.json()\n          })\n          .then((resultados) => {\n            this.setState({ resultados: resultados.MRData.CircuitTable.Circuits})\n          })\n      }   \n\n\n    handleZoomLevelChange(newZoomLevel) {\n        this.setState({ currentZoomLevel: newZoomLevel });\n    }\n\n    handleResetZoom(newZoomLevel) {\n        this.setState({ newZoomLevel: newZoomLevel });\n    }\n\n\n        \n    render() {\n\n        const { resultados } = this.state;\n\n        return (\n            <div>\n                <Map\n                    ref={m => { this.leafletMap = m; }}\n                    center={mapCenter}\n                    zoom={zoomLevel}\n                    >\n                <TileLayer\n                    attribution={\"JesÃºs Esteban\"}\n                    url={stamenTonerTiles}\n                    />\n\n                {resultados.map((resultados) => {\n                    return (\n                        <Marker \n                            position={[resultados.Location.lat, resultados.Location.long]}\n                        >\n                            <Popup>\n                                <ul className={\"list-popup\"}>\n                                    <li className={\"title\"}><span>{resultados.circuitName}</span></li>\n                                    <li>\n                                        <span>{resultados.Location.locality} </span>\n                                        /\n                                        <span> {resultados.Location.country}</span>\n                                    </li>\n                                    <li>\n                                        <a href={resultados.url} target=\"_blank\">Wikipedia</a>\n                                    </li>\n                                </ul>\n                                \n                            </Popup>\n                        </Marker>                        \n                    )\n                    })\n                }\n\n                <Control position=\"topright\">\n                    <div>\n                        <div style={{ marginLeft: '37px' }}>\n                            <button onClick={this.handleResetZoom}>\n                                Reset Zoom\n                            </button>\n                        </div>\n                    </div>\n                </Control>\n                </Map>\n            </div>\n        );\n    }\n}\n\nrender(\n    <App />,\n    document.getElementById('mount')\n);\n\n\n\n\n\n// Recursos\n// https://towardsdatascience.com/creating-a-bubbles-map-using-react-leaflet-e75124ca1cd2\n// Ejemplos de mapas https://leaflet-extras.github.io/leaflet-providers/preview/\n\n"]},"metadata":{},"sourceType":"module"}