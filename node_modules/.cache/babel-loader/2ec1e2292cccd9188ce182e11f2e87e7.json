{"ast":null,"code":"var _jsxFileName = \"/Users/jesus.esteban/Workspace/f1/src/components/map/map.js\";\nimport React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport Control from 'react-leaflet-control'; // Map Styles\n// const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjna67hy23vcf2rppfpvoj24q/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\nconst stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjyn1qsf100x61cpk2cjvnvij/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw'; // const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjynakrxe1jzk1cqco7zdva6j/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\nconst mapCenter = [26.9837669, -60.2810849];\nconst zoomLevel = 2.5;\nconst polyline = [[41.57, 2.26111], [-37.8497, 144.968]];\nconst multiPolyline = [[[41.57, 2.26111], [-37.8497, 144.968]], [[-37.8497, 144.968], [26.0325, 50.5106]]];\nexport default class CircuitMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentZoomLevel: zoomLevel,\n      circuits: []\n    };\n    this.handleResetZoom = this.handleResetZoom.bind(this);\n  }\n\n  componentDidMount() {\n    const leafletMap = this.leafletMap.leafletElement;\n    leafletMap.on('zoomend', () => {\n      const updatedZoomLevel = leafletMap.getZoom();\n      this.handleZoomLevelChange(updatedZoomLevel);\n    });\n  }\n\n  handleZoomLevelChange(newZoomLevel) {\n    this.setState({\n      currentZoomLevel: newZoomLevel\n    });\n  }\n\n  handleResetZoom(newZoomLevel) {\n    this.setState({\n      newZoomLevel: newZoomLevel\n    });\n  }\n\n  render() {\n    const circuits = this.props.circuits;\n    console.log(multiPolyline);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Map, {\n      ref: m => {\n        this.leafletMap = m;\n      },\n      center: mapCenter,\n      zoom: zoomLevel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(TileLayer, {\n      attribution: \"JesÃºs Esteban\",\n      url: stamenTonerTiles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), circuits.map(circuit => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        position: [circuit.Location.lat, circuit.Location.long],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-popup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, circuit.circuitName)), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, circuit.Location.locality, \" \"), \"/\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \" \", circuit.Location.country)), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: circuit.url,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Wikipedia\"))))), React.createElement(Polyline, {\n        color: \"#F1C40F\",\n        weight: \"1\",\n        positions: [[[circuits.Location.lat, circuits.Location.long], [-37.8497, 144.968]], [[-37.8497, 144.968], [26.0325, 50.5106]]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    }), React.createElement(Control, {\n      position: \"topright\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        marginLeft: '37px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleResetZoom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Reset Zoom\"))))));\n  }\n\n} // Recursos\n// https://towardsdatascience.com/creating-a-bubbles-map-using-react-leaflet-e75124ca1cd2\n// Ejemplos de mapas https://leaflet-extras.github.io/leaflet-providers/preview/\n// https://github.com/humangeo/leaflet-dvf/wiki/2.-Examples\n// http://www.liedman.net/leaflet-routing-machine/\n// http://rowanwins.github.io/leaflet-easyPrint/\n// https://github.com/dwilhelm89/Leaflet.StyleEditor","map":{"version":3,"sources":["/Users/jesus.esteban/Workspace/f1/src/components/map/map.js"],"names":["React","Component","Map","TileLayer","Marker","Popup","Polyline","Control","stamenTonerTiles","mapCenter","zoomLevel","polyline","multiPolyline","CircuitMap","constructor","props","state","currentZoomLevel","circuits","handleResetZoom","bind","componentDidMount","leafletMap","leafletElement","on","updatedZoomLevel","getZoom","handleZoomLevelChange","newZoomLevel","setState","render","console","log","m","map","circuit","Location","lat","long","circuitName","locality","country","url","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport Control from 'react-leaflet-control';\n\n// Map Styles\n// const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjna67hy23vcf2rppfpvoj24q/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\nconst stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjyn1qsf100x61cpk2cjvnvij/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// const stamenTonerTiles = 'https://api.mapbox.com/styles/v1/jesusesteban/cjynakrxe1jzk1cqco7zdva6j/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\nconst mapCenter = [26.9837669, -60.2810849];\nconst zoomLevel = 2.5;\n\nconst polyline = [[41.57, 2.26111], [-37.8497, 144.968]];\n\nconst multiPolyline = [\n    [[41.57, 2.26111], [-37.8497, 144.968]],\n    [[-37.8497, 144.968], [26.0325, 50.5106]],\n];\n\n\nexport default class CircuitMap extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            currentZoomLevel: zoomLevel,\n            circuits: []\n        };\n        this.handleResetZoom = this.handleResetZoom.bind(this);\n    }\n\n\n    componentDidMount() {\n        const leafletMap = this.leafletMap.leafletElement;\n        leafletMap.on('zoomend', () => {\n            const updatedZoomLevel = leafletMap.getZoom();\n            this.handleZoomLevelChange(updatedZoomLevel);\n        });     \n    }\n\n\n    handleZoomLevelChange(newZoomLevel) {\n        this.setState({ currentZoomLevel: newZoomLevel });\n    }\n\n    handleResetZoom(newZoomLevel) {\n        this.setState({ newZoomLevel: newZoomLevel });\n    }\n\n\n        \n    render() {\n\n        const { circuits} = this.props;\n        console.log(multiPolyline);\n\n\n        return (\n            <div>\n                <Map\n                    ref={m => { this.leafletMap = m; }}\n                    center={mapCenter}\n                    zoom={zoomLevel}\n                    >\n                <TileLayer\n                    attribution={\"JesÃºs Esteban\"}\n                    url={stamenTonerTiles}\n                    />\n\n                {circuits.map((circuit) => {\n                    return (\n                        <React.Fragment>\n                            <Marker \n                                position={[circuit.Location.lat, circuit.Location.long]}\n                            >\n                                <Popup>\n                                    <ul className={\"list-popup\"}>\n                                        <li className={\"title\"}><span>{circuit.circuitName}</span></li>\n                                        <li>\n                                            <span>{circuit.Location.locality} </span>\n                                            /\n                                            <span> {circuit.Location.country}</span>\n                                        </li>\n                                        <li>\n                                            <a href={circuit.url} target=\"_blank\">Wikipedia</a>\n                                        </li>\n                                    </ul>\n                                    \n                                </Popup>\n                            </Marker>     \n                            <Polyline color=\"#F1C40F\"  weight=\"1\" positions=\n                            {[\n                                [[circuits.Location.lat, circuits.Location.long], [-37.8497, 144.968]],\n                                [[-37.8497, 144.968], [26.0325, 50.5106]]\n                            ]} \n                            />\n                        </React.Fragment>                        \n                    )\n                    })\n                }                \n\n\n                <Control position=\"topright\">\n                    <div>\n                        <div style={{ marginLeft: '37px' }}>\n                            <button onClick={this.handleResetZoom}>\n                                Reset Zoom\n                            </button>\n                        </div>\n                    </div>\n                </Control>\n                </Map>\n            </div>\n        );\n    }\n}\n\n\n\n\n\n\n\n// Recursos\n// https://towardsdatascience.com/creating-a-bubbles-map-using-react-leaflet-e75124ca1cd2\n// Ejemplos de mapas https://leaflet-extras.github.io/leaflet-providers/preview/\n// https://github.com/humangeo/leaflet-dvf/wiki/2.-Examples\n// http://www.liedman.net/leaflet-routing-machine/\n// http://rowanwins.github.io/leaflet-easyPrint/\n// https://github.com/dwilhelm89/Leaflet.StyleEditor"]},"metadata":{},"sourceType":"module"}