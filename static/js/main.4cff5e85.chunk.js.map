{"version":3,"sources":["images/wiki.png","images/logo-w.png","components/map/map.js","components/content/content.js","components/select-year/select-year.js","components/header/header.js","components/carousel/carousel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CircuitMap","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","races","handleResetZoom","handleClickMarker","bind","assertThisInitialized","_this2","_this$props","zoomLevel","mapCenter","setActiveRound","round","console","log","react_default","a","createElement","Map","ref","map","center","zoom","className","TileLayer","attribution","url","race","Fragment","Marker","position","Circuit","Location","lat","long","onClick","e","Popup","raceName","locality","country","href","target","control_default","style","marginLeft","marginTop","zIndex","src","wiki","alt","Component","Content","pilots","qualifyings","esm","pilot","index","key","Driver","familyName","Constructor","name","Time","time","status","qualifying","Q1","Q2","Q3","date","SelectYear","getOptions","toConsumableArray","yearsCircuits","field","value","season","label","fetch","then","response","json","sortedYears","MRData","SeasonTable","Seasons","reverse","setState","_this3","options","react_select_browser_esm","defaultValue","onChange","handleYearChange","logo","select_year_SelectYear","year","Carousel","handleClickCarousel","App","event","setMapCenter","circuits","circuitsYears","results","clickCircuit","undefined","getData","prevProps","prevState","getListCircuits","getYearCircuits","getRaces","RaceTable","Races","resultados","CircuitTable","Circuits","_this4","_this5","Results","_this6","QualifyingResults","latlng","lng","getPilots","getQualifyings","_ref","_this$state","header_Content","map_CircuitMap","content_Content","carousel_Carousel","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4cff5e85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wiki.88ed8a0b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-w.c1ad6f31.png\";","import React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport Control from 'react-leaflet-control';\nimport wiki from '../../images/wiki.png';\n// Map Styles\n// const mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck6gzx8x604xk1ipgqkwomp1g/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// const mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck17yr99g3bx21coh6z6t0mz0/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n//const mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/cjyn1qsf100x61cpk2cjvnvij/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// const mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/cjynakrxe1jzk1cqco7zdva6j/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\n\n// 1950\n// const mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck70xfbac03ik1irtiv3q29vp/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\n\n//BLUE\n// const mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/cjna67hy23vcf2rppfpvoj24q/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\n\n// BLACK\nconst mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck6sg0gp31a0f1imgchb0znld/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// const mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck6sg2kb86pin1it43e343zsz/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\n\nexport default class CircuitMap extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            races: []\n        };\n        this.props.handleResetZoom();\n        this.handleClickMarker = this.props.handleClickMarker.bind(this);\n    }\n\n\n    componentDidMount() {\n        // const leafletMap = this.leafletMap.leafletElement;\n        // leafletMap.on('zoomend', () => {\n        //     const updatedZoomLevel = leafletMap.getZoom();\n        //     this.handleZoomLevelChange(updatedZoomLevel);\n        // });     \n    }\n\n\n\n    // handleClickMarker(e){        \n    //     const { latlng } = e;\n    //     const { lat, lng } = latlng;\n    //     this.props.setMapCenter(15, [lat, lng]);\n    // }\n\n\n    // getPolyLineArray() {\n    //     const circuitsCoordinates = this.props.circuits.map(circuit => {\n    //         return [circuit.Location.lat, circuit.Location.long];\n    //     });\n    //     return circuitsCoordinates;\n    // }\n\n        \n    render() {\n        const { races, zoomLevel, mapCenter, handleResetZoom, setActiveRound, round } = this.props;\n        console.log(races);\n        return (\n            <div>\n                <Map\n                    ref={(ref) => { this.map = ref; }}\n                    center={mapCenter}\n                    zoom={zoomLevel}\n                    className={round === 0 ? \"\" : \"show-content\"}\n                    >\n                <TileLayer\n                    attribution={\"Jesús Esteban\"}\n                    url={mapStyled}\n                    />\n\n                {races.map((race) => {\n                    return (\n                        <React.Fragment>\n                            <Marker \n                                position={[race.Circuit.Location.lat, race.Circuit.Location.long]}\n                                onClick={ e=> \n                                    {\n                                        this.handleClickMarker(e);\n                                        setActiveRound(race.round)\n                                    }\n                                }   \n                            >\n                                <Popup>\n                                    <ul className={\"list-popup\"}>\n                                        <li className={\"title\"}><span>{race.raceName}</span></li>\n                                        <li>\n                                            <span>{race.Circuit.Location.locality} </span>\n                                            /\n                                            <span> {race.Circuit.Location.country}</span>\n                                        </li>\n                                        <li><a href={race.Circuit.url} target={\"_blank\"}>Wikipedia</a></li>\n                                    </ul>\n                                    \n                                </Popup>\n                            </Marker>     \n                        </React.Fragment>                        \n                    )\n                    })\n                }                \n\n                {/* <Polyline color=\"#F1C40F\"  weight=\"1\" positions={this.getPolyLineArray()}/> */}\n\n\n\n\n                <Control position=\"topright\">\n                    <div>\n                        <div style={{ marginLeft: '37px', marginTop: '110px', zIndex: '0' }}>\n                            <button onClick={() => handleResetZoom()}>\n                                Reset\n                            </button>\n                        </div>\n                    </div>\n                </Control>\n                </Map>\n                <img src={wiki} alt=\"wiki\" className=\"img-wiki\"/>\n                \n            </div>\n        );\n    }\n}\n\n\n\n\n\n\n\n// Recursos\n// https://towardsdatascience.com/creating-a-bubbles-map-using-react-leaflet-e75124ca1cd2\n// Ejemplos de mapas https://leaflet-extras.github.io/leaflet-providers/preview/\n// https://github.com/humangeo/leaflet-dvf/wiki/2.-Examples\n// http://www.liedman.net/leaflet-routing-machine/\n// http://rowanwins.github.io/leaflet-easyPrint/\n// https://github.com/dwilhelm89/Leaflet.StyleEditor","import React, { Component } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nexport default class Content extends Component {\n\n    render() {\n        const { pilots, races, qualifyings, round } = this.props;\n        \n        return (\n            <div className={!round ? \"content\" : \"content show-content\"}>\n                <div className={\"content-box\"}>\n\n                    <div className={\"arrows\"}>\n                        <span>Prev</span>\n                        <span>Next</span>\n                    </div>                            \n\n                    <div className={\"title-content\"}>\n                        <h2>Nombre de carrera</h2>\n                    </div>\n\n                    <Tabs>\n                        <TabList>\n                            <Tab>Race Result</Tab>\n                            <Tab>Qualifying Results</Tab>\n                            <Tab>Circuit info</Tab>\n                        </TabList>\n\n                        <TabPanel>\n                            <div className={'st_viewport'}>\n                                <div className={'st_wrap_table'}>\n                                    <header className={'st_table_header'}>\n                                        <div className=\"st_row\">\n                                            <div className={'st_column'}><span>Pos.</span></div>\n                                            <div className={'st_column'}><span>Name</span></div>\n                                            <div className={'st_column'}><span>Constructor</span></div>\n                                            <div className={'st_column'}><span>Time</span></div>\n                                            <div className={'st_column'}><span>Status</span></div>\n                                        </div>\n                                    </header>\n                                    <div className=\"st_table\">\n                                        {pilots.map((pilot, index) => {                                        \n                                            return (\n                                                <div className=\"st_row\" key={index}>\n                                                    <div className={'st_column'}><span>{pilot.position}.</span></div>                                    \n                                                    <div className={'st_column'}>\n                                                        <a href={pilot.Driver.url} target={\"_blank\"}>\n                                                            {pilot.Driver.familyName}\n                                                            {/* {pilot.Driver.givenName} {pilot.Driver.familyName} */}\n                                                        </a>                                                    \n                                                    </div>\n\n                                                    <div className={'st_column'}><span>{pilot.Constructor.name}</span></div>\n\n                                                    <div className={'st_column'}>\n                                                        { !!pilot.Time ?\n                                                            <span>{pilot.Time.time}</span>\n                                                            :\n                                                            \"\"\n                                                        }\n                                                    </div>                             \n                                                    <div className={'st_column'}><span>{pilot.status}</span></div>                   \n                                                </div>                                     \n                                            )\n                                        })\n                                        }       \n                                    </div>\n                                </div>\n                            </div>\n                            \n                        </TabPanel>\n                        <TabPanel>\n                            <div className={'st_viewport'}>\n                                <div className={'st_wrap_table'}>\n                                    <header className={'st_table_header'}>\n                                        <div className=\"st_row\">\n                                            <div className={'st_column'}><span>Pos.</span></div>\n                                            <div className={'st_column'}><span>Name</span></div>\n                                            <div className={'st_column'}><span>Q1</span></div>\n                                            <div className={'st_column'}><span>Q2</span></div>\n                                            <div className={'st_column'}><span>Q3</span></div>\n                                        </div>\n                                    </header>\n                                    <div className=\"st_table\">\n                                        {qualifyings.map((qualifying, index) => {                                        \n                                            return (\n                                                <div className=\"st_row\" key={index}>\n                                                    <div className={'st_column'}><span>{qualifying.position}</span></div>                                    \n                                                    <div className={'st_column'}>\n                                                        <a href={qualifying.Driver.url} target={\"_blank\"}>\n                                                            {qualifying.Driver.familyName}\n                                                        </a>                                                  \n                                                    </div>\n\n                                                    <div className={'st_column'}><span>{qualifying.Q1}</span></div>\n                                                    <div className={'st_column'}><span>{qualifying.Q2}</span></div>\n                                                    <div className={'st_column'}><span>{qualifying.Q3}</span></div>\n                                                </div>                                     \n                                            )\n                                        })\n                                        }       \n                                    </div>\n                                </div>\n                            </div>                            \n                        </TabPanel>\n                        <TabPanel>\n                        <div className={'st_viewport'}>\n                                <div className={'st_wrap_table'}>\n                                    <header className={'st_table_header'}>\n                                        <div className=\"st_row\">\n                                            <div className={'st_column'}><span>Locality</span></div>\n                                            <div className={'st_column'}><span>Country</span></div>\n                                            <div className={'st_column'}><span>Date</span></div>\n                                            <div className={'st_column'}><span>Hour</span></div>\n                                            <div className={'st_column'}><span>More info</span></div>\n                                        </div>\n                                    </header>\n                                    <div className=\"st_table\">\n                                        {races.map((race, index) => {        \n                                            console.log(races);\n                                            return (\n                                                <div className=\"st_row\" key={index}>\n                                                    <div className={'st_column'}><span>{race.Circuit.Location.locality}</span></div>                                    \n                                                    <div className={'st_column'}><span>{race.Circuit.Location.country}</span></div>\n                                                    <div className={'st_column'}><span>{race.date}</span></div>\n                                                    <div className={'st_column'}><span>{race.time}</span></div>\n                                                    <div className={'st_column'}>\n                                                        <a href={race.Circuit.url} target={\"_blank\"}>\n                                                            Wikipedia\n                                                        </a>\n                                                    </div>\n                                                </div>                                     \n                                            )\n                                        })\n                                        }       \n                                    </div>\n                                </div>\n                            </div>                                                                             \n                        </TabPanel>                        \n                    </Tabs>\n\n\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nexport default class SelectYear extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            yearsCircuits: []\n        };\n    }\n\n    \n    componentWillMount() {\n        fetch('https://ergast.com/api/f1/seasons.json?limit=100')\n          .then((response) => {\n            return response.json()\n          })\n          .then((yearsCircuits) => {\n            const sortedYears = yearsCircuits.MRData.SeasonTable.Seasons.reverse();\n            this.setState({ yearsCircuits: sortedYears})\n            })\n        }   \n        \n        \n        \n        \n        getOptions = () => {\n\n            const options = [...this.state.yearsCircuits].map((field) => {\n                return ({\n                    value: field.season, \n                    label: field.season\n                })\n            });\n            return options;\n        }\n        \n        \n        \n        \n        render() {\n            const options = this.getOptions();\n            return (\n            <div>\n                {!!options[0] &&\n                    <div className={\"select-year\"}>\n                        <Select \n                            options={options}     \n                            defaultValue={options[0]}\n                            onChange={e => {\n                                this.props.handleYearChange({target:{value: e.value}});\n                                this.props.handleResetZoom();\n                            }\n                            }      \n                        />\n                    </div>\n\n                }\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from 'react';\n\nimport SelectYear from '../select-year/select-year';\nimport logo from '../../images/logo-w.png';\n\nexport default class Content extends Component {\n\n\n    render() {\n        return (\n            <div>\n                <div className={\"header\"}>\n                    <img src={logo} alt=\"Logo\" />\n                    <SelectYear year={this.props.year} handleYearChange={this.props.handleYearChange} handleResetZoom={this.props.handleResetZoom}/>\n                </div>\n                \n                            \n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from 'react';\n\n\nexport default class Carousel extends Component {\n    constructor(props) {\n        super(props);\n        this.handleClickCarousel = this.props.handleClickCarousel.bind(this);\n    }\n    \n\n\n    render() {\n        const { races, round, setActiveRound } = this.props;\n        return (\n            <div>\n                <div className={\"carousel\"}>\n                    <ul>\n                        {races.map((race, index) => {\n                            return (\n                                <li key={index}>\n                                    <span \n                                    className={round === race.round ? \"active\" : \"\"}\n                                    onClick={(e) => {\n                                        this.handleClickCarousel(race.Circuit.Location)\n                                        setActiveRound(race.round)\n                                    }\n                                        }>\n                                        {race.round}- {race.raceName}\n                                    </span>\n                                </li>                                     \n                            )\n                        })\n                        }                          \n                    </ul>\n                </div>\n                \n                            \n            </div>\n        );\n    }\n}\n\n\n\n","import React from 'react';\nimport './App.scss';\n\nimport Map from './components/map/map';\nimport Content from './components/content/content';\nimport Header from './components/header/header';\nimport Carousel from './components/carousel/carousel';\n\n\n\n\nclass App extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      year: '2019',\n      races: [],\n      pilots: [],\n      qualifyings: [],\n      circuits: [],\n      circuitsYears: [],\n      results: [],\n      clickCircuit: undefined,\n      zoomLevel: 2.2,\n      mapCenter: [22.9837669, -10.2810849],\n      round: 0\n    }\n    this.handleClickCarousel = this.handleClickCarousel.bind(this);\n    this.handleClickMarker = this.handleClickMarker.bind(this);\n  }\n\n  componentDidMount(){\n    this.getData();\n  }\n  \n  componentDidUpdate(prevProps, prevState){\n    if(this.state.year !== prevState.year){\n      this.getData();\n    }\n  }\n  \n  \n  getData(){\n    this.getListCircuits();\n    this.getYearCircuits();\n    this.getRaces();    \n  }\n\n  getListCircuits() {\n    fetch('https://ergast.com/api/f1/' + this.state.year + '.json?limit=100')\n      .then((response) => {\n        return response.json()\n      })\n      .then((yearsCircuits) => {\n        this.setState({ circuitsYears: yearsCircuits.MRData.RaceTable.Races})\n      })\n  }\n\n  getYearCircuits () {\n    fetch('https://ergast.com/api/f1/' + this.state.year + '/circuits.json?limit=100')\n        .then((response) => {\n        return response.json()\n        })\n        .then((resultados) => {\n        this.setState({ circuits: resultados.MRData.CircuitTable.Circuits})\n    })\n  }\n\n  getRaces () {\n    fetch('https://ergast.com/api/f1/' + this.state.year + '.json?limit=100')\n        .then((response) => {\n        return response.json()\n        })\n        .then((resultados) => {\n        this.setState({ races: resultados.MRData.RaceTable.Races})\n    })\n  }\n\n  getPilots () {\n    fetch('https://ergast.com/api/f1/' + this.state.year + '/' + this.state.round + '/results.json')\n        .then((response) => {\n        return response.json()\n        })\n        .then((resultados) => {\n        this.setState({ pilots: resultados.MRData.RaceTable.Races[0].Results})\n    })\n  }\n\n\n  getQualifyings () {\n    fetch('https://ergast.com/api/f1/' + this.state.year + '/' + this.state.round + '/qualifying.json')\n        .then((response) => {\n        return response.json()\n        })\n        .then((resultados) => {\n        this.setState({ qualifyings: resultados.MRData.RaceTable.Races[0].QualifyingResults})\n    })\n  }  \n\n\n\nhandleYearChange = event => {\n  const year = event.target.value;\n  this.setState({ year });\n}\n\nsetMapCenter = (zoomLevel, mapCenter) => {\n  this.setState({\n    zoomLevel, \n    mapCenter\n  })\n}\n\nhandleResetZoom = () => {\n  this.setState({ \n      zoomLevel: 2.2,\n      mapCenter: [36.9837669, -10.2810849],\n      round: 0\n  });\n}\n\nhandleClickMarker(e){        \n    const { latlng } = e;\n    const { lat, lng } = latlng;\n    this.setMapCenter(15, [lat, lng] );\n    this.getPilots();\n    this.getQualifyings();\n}\n\nhandleClickCarousel({lat, long}){        \n  this.setMapCenter(15, [lat, long]);\n  this.getPilots();\n  this.getQualifyings();\n}\n\n\nsetActiveRound = (round) => {\n  this.setState({round});\n}\n\n\n  render (){\n    const { year, round, circuits, races, pilots, qualifyings, zoomLevel, mapCenter } = this.state;    \n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Header handleYearChange={this.handleYearChange} handleResetZoom={this.handleResetZoom} />\n          <Map \n            year={year} \n            circuits={circuits} \n            races={races}\n            handleResetZoom={this.handleResetZoom} \n            zoomLevel={ zoomLevel} \n            mapCenter={ mapCenter } \n            setMapCenter={this.setMapCenter}\n            handleClickMarker={this.handleClickMarker}\n            round={round}\n            setActiveRound={this.setActiveRound}\n          /> \n          {/* { round !==0 &&\n              <Content \n                pilots={pilots} \n                qualifyings={qualifyings} \n                races={races}\n              /> \n          } */}\n          <Content \n            round={round !==0}\n            pilots={pilots} \n            qualifyings={qualifyings} \n            races={races}\n          />           \n          <Carousel \n            races={races}\n            handleClickMarker={this.handleClickMarker}\n            handleClickCarousel={this.handleClickCarousel}\n            round={round}\n            setActiveRound={this.setActiveRound}\n          />\n        </header>      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('mount'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}