{"version":3,"sources":["images/wiki.png","images/logo-w.png","components/map/map.js","components/content/content.js","components/select-year/select-year.js","components/header/header.js","components/carousel/carousel.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","fiftyStyled","sixtyStyled","seventyStyled","eightyStyled","ninetyStyled","thousandStyled","mapStyled","CircuitMap","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getMapStyles","year","style","state","races","handleResetZoom","handleClickMarker","bind","assertThisInitialized","_this2","_this$props","zoomLevel","mapCenter","round","react_default","a","createElement","Map","ref","map","center","zoom","className","TileLayer","attribution","url","parseInt","race","Fragment","Marker","position","Circuit","Location","lat","long","onClick","e","Popup","raceName","locality","country","href","target","control_default","marginLeft","marginTop","zIndex","src","wiki","alt","Component","Content","pilots","qualifyings","console","log","selectedRace","filter","index","esm","pilot","key","Driver","familyName","Constructor","name","Time","time","status","qualifying","Q1","Q2","Q3","date","SelectYear","getOptions","toConsumableArray","yearsCircuits","field","value","season","label","fetch","then","response","json","sortedYears","MRData","SeasonTable","Seasons","reverse","setState","_this3","options","react_select_browser_esm","defaultValue","onChange","handleYearChange","logo","select_year_SelectYear","Carousel","handleClickCarousel","setActiveRound","App","event","setMapCenter","circuits","circuitsYears","results","clickCircuit","undefined","getData","prevProps","prevState","getListCircuits","getYearCircuits","getRaces","getPilots","getQualifyings","RaceTable","Races","resultados","CircuitTable","Circuits","_this4","_this5","Results","_this6","isQualifyingResults","QualifyingResults","_this7","latlng","lng","_ref","_this$state","header_Content","map_CircuitMap","content_Content","carousel_Carousel","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.62b37932.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wiki.88ed8a0b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-w.c1ad6f31.png\";","import React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport Control from 'react-leaflet-control';\nimport wiki from '../../images/wiki.png';\n// Map Styles\n// const mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck6gzx8x604xk1ipgqkwomp1g/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n//const mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/cjyn1qsf100x61cpk2cjvnvij/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n//const mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/cjynakrxe1jzk1cqco7zdva6j/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\n\n// 1950\nconst fiftyStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck70xfbac03ik1irtiv3q29vp/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// 1960\nconst sixtyStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck73izmsr2bkh1inhs7yrxrv6/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// 1970\nconst seventyStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck73jms8z2c6p1inh6yu5krp1/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n//1980\nconst eightyStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck73jp92g2cb01iqwmgk74gw9/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// 1990\nconst ninetyStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck73jk5410aoz1imwgf0lx62u/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// 2000\nconst thousandStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck6sg2kb86pin1it43e343zsz/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\n\n//BLUE\n// const mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/cjna67hy23vcf2rppfpvoj24q/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\n\n// BLACK\n\nconst mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/cjna67hy23vcf2rppfpvoj24q/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\n\nexport default class CircuitMap extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            races: []\n        };\n        this.props.handleResetZoom();\n        this.handleClickMarker = this.props.handleClickMarker.bind(this);\n    }\n\n\n    componentDidMount() {\n        // const leafletMap = this.leafletMap.leafletElement;\n        // leafletMap.on('zoomend', () => {\n        //     const updatedZoomLevel = leafletMap.getZoom();\n        //     this.handleZoomLevelChange(updatedZoomLevel);\n        // });     \n    }\n\n    getMapStyles = (year) =>{\n        let style = \"\";\n        switch (true){\n            case year <= 1959:\n                style = fiftyStyled;\n            break;\n            case year >= 1960 && year <= 1969:\n                style = sixtyStyled;\n            break;\n            case year >= 1970 && year <= 1979:\n                style = seventyStyled;\n            break;\n            case year >= 1980 && year <= 1989:\n                style = eightyStyled;\n            break;\n            case year >= 1990 && year <= 1999:\n                style = ninetyStyled;\n            break;\n            case year >= 2000 && year <= 2009:\n                style = thousandStyled;\n            break;\n            case year >= 2010 && year <= 2019:\n                style = mapStyled;\n            break;\n            case year >= 2020 && year <= 2029:\n                style = mapStyled;\n            break;\n            default:\n                style = mapStyled;\n            break;\n        }\n        return style;\n    }\n\n\n    // getPolyLineArray() {\n    //     const circuitsCoordinates = this.props.circuits.map(circuit => {\n    //         return [circuit.Location.lat, circuit.Location.long];\n    //     });\n    //     return circuitsCoordinates;\n    // }\n\n        \n    render() {\n        const { races, zoomLevel, mapCenter, handleResetZoom, round, year } = this.props;\n        // console.log(races);\n        return (\n            <div>\n                <Map\n                    ref={(ref) => { this.map = ref; }}\n                    center={mapCenter}\n                    zoom={zoomLevel}\n                    className={round === 0 ? \"\" : \"show-content\"}\n                    >\n                <TileLayer\n                    attribution={\"Jesús Esteban\"}\n                    url={this.getMapStyles(parseInt(year))}\n                    />\n\n                {races.map((race) => {\n                    return (\n                        <React.Fragment>\n                            <Marker \n                                position={[race.Circuit.Location.lat, race.Circuit.Location.long]}\n                                onClick={ e=>                                     \n                                    this.handleClickMarker(e, race.round)\n                                }   \n                            >\n                                <Popup>\n                                    <ul className={\"list-popup\"}>\n                                        <li className={\"title\"}><span>{race.raceName}</span></li>\n                                        <li>\n                                            <span>{race.Circuit.Location.locality} </span>\n                                            /\n                                            <span> {race.Circuit.Location.country}</span>\n                                        </li>\n                                        <li><a href={race.Circuit.url} target={\"_blank\"}>Wikipedia</a></li>\n                                    </ul>\n                                    \n                                </Popup>\n                            </Marker>     \n                        </React.Fragment>                        \n                    )\n                    })\n                }                \n\n                {/* <Polyline color=\"#F1C40F\"  weight=\"1\" positions={this.getPolyLineArray()}/> */}\n\n\n\n\n                <Control position=\"topright\">\n                    <div>\n                        <div style={{ marginLeft: '37px', marginTop: '110px', zIndex: '0' }}>\n                            <button onClick={() => handleResetZoom()}>\n                                Reset\n                            </button>\n                        </div>\n                    </div>\n                </Control>\n                </Map>\n                <img src={wiki} alt=\"wiki\" className=\"img-wiki\"/>\n                \n            </div>\n        );\n    }\n}\n\n\n\n\n\n\n\n// Recursos\n// https://towardsdatascience.com/creating-a-bubbles-map-using-react-leaflet-e75124ca1cd2\n// Ejemplos de mapas https://leaflet-extras.github.io/leaflet-providers/preview/\n// https://github.com/humangeo/leaflet-dvf/wiki/2.-Examples\n// http://www.liedman.net/leaflet-routing-machine/\n// http://rowanwins.github.io/leaflet-easyPrint/\n// https://github.com/dwilhelm89/Leaflet.StyleEditor\n// COLORES POR DECADA https://juiceboxinteractive.com/blog/color/\n\n// 1960\n// 207 73 23\n// 249 176 61\n// 117 140 51\n// 152 89 20\n// 208 178 133\n// 45 117 140","import React, { Component } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nexport default class Content extends Component {\n\n    render() {\n        const { pilots, races, qualifyings, round } = this.props;\n        // console.log(\"RACES\", races);\n        // console.log(\"round\", round);\n        console.log(\"pilots\", pilots);\n\n\n        const selectedRace = () => {\n            const raceRound = races.filter((race, index) => {\n                return race.round === round;\n            });\n            return raceRound[0];\n        }\n\n        return (\n            <div className={round === 0 ? \"content\" : \"content show-content\"}>\n                <div className={\"content-box\"}>\n\n                    <div className={\"arrows\"}>\n                        <span>Prev</span>\n                        <span>Next</span>\n                    </div>                            \n\n                    <div className={\"title-content\"}>\n                        { selectedRace() &&\n                            <h2>{selectedRace().raceName}</h2>\n                        }\n                    </div>\n\n\n                    <Tabs>\n                        <TabList>\n                            <Tab>Race Result</Tab>\n                            <Tab>Qualifying Results</Tab>\n                            <Tab>Circuit info</Tab>\n                        </TabList>\n\n                        <TabPanel>\n                            <div className={'st_viewport'}>\n                                <div className={'st_wrap_table'}>\n                                    <header className={'st_table_header'}>\n                                        <div className=\"st_row\">\n                                            <div className={'st_column'}><span>Pos.</span></div>\n                                            <div className={'st_column'}><span>Name</span></div>\n                                            <div className={'st_column'}><span>Constructor</span></div>\n                                            <div className={'st_column'}><span>Time</span></div>\n                                            <div className={'st_column'}><span>Status</span></div>\n                                        </div>\n                                    </header>\n                                    <div className=\"st_table\">\n                                        {pilots.map((pilot, index) => {                                        \n                                            return (\n                                                <div className=\"st_row\" key={index}>\n                                                    <div className={'st_column'}><span>{pilot.position}.</span></div>                                    \n                                                    <div className={'st_column'}>\n                                                        <a href={pilot.Driver.url} target={\"_blank\"}>\n                                                            {pilot.Driver.familyName}\n                                                            {/* {pilot.Driver.givenName} {pilot.Driver.familyName} */}\n                                                        </a>                                                    \n                                                    </div>\n\n                                                    <div className={'st_column'}><span>{pilot.Constructor.name}</span></div>\n\n                                                    <div className={'st_column'}>\n                                                        { !!pilot.Time ?\n                                                            <span>{pilot.Time.time}</span>\n                                                            :\n                                                            \"\"\n                                                        }\n                                                    </div>                             \n                                                    <div className={'st_column'}><span>{pilot.status}</span></div>                   \n                                                </div>                                     \n                                            )\n                                        })\n                                        }       \n                                    </div>\n                                </div>\n                            </div>\n                            \n                        </TabPanel>\n                            <TabPanel>\n                        { qualifyings ?\n                                <div className={'st_viewport'}>\n                                    <div className={'st_wrap_table'}>\n                                        <header className={'st_table_header'}>\n                                            <div className=\"st_row\">\n                                                <div className={'st_column'}><span>Pos.</span></div>\n                                                <div className={'st_column'}><span>Name</span></div>\n                                                <div className={'st_column'}><span>Q1</span></div>\n                                                <div className={'st_column'}><span>Q2</span></div>\n                                                <div className={'st_column'}><span>Q3</span></div>\n                                            </div>\n                                        </header>\n                                        <div className=\"st_table\">\n                                            {qualifyings.map((qualifying, index) => {                                        \n                                                // console.log(\"QUA\", qualifying);\n                                                return (\n                                                    <div className=\"st_row\" key={index}>\n                                                        <div className={'st_column'}><span>{qualifying.position}</span></div>                                    \n                                                        <div className={'st_column'}>\n                                                            <a href={qualifying.Driver.url} target={\"_blank\"}>\n                                                                {qualifying.Driver.familyName}\n                                                            </a>                                                  \n                                                        </div>\n\n                                                        <div className={'st_column'}><span>{qualifying.Q1}</span></div>\n                                                        <div className={'st_column'}><span>{qualifying.Q2}</span></div>\n                                                        <div className={'st_column'}><span>{qualifying.Q3}</span></div>\n                                                    </div>                                     \n                                                )\n                                            })\n                                            }       \n                                        </div>\n                                    </div>\n                                </div>                            \n                                :\n                                <div>No data results</div>\n                        }\n                            </TabPanel>\n                        <TabPanel>\n                        <div className={'st_viewport'}>\n                                <div className={'st_wrap_table'}>\n                                    <header className={'st_table_header'}>\n                                        <div className=\"st_row\">\n                                            <div className={'st_column'}><span>Locality</span></div>\n                                            <div className={'st_column'}><span>Country</span></div>\n                                            <div className={'st_column'}><span>Date</span></div>\n                                            <div className={'st_column'}><span>Hour</span></div>\n                                            <div className={'st_column'}><span>More info</span></div>\n                                        </div>\n                                    </header>\n                                    <div className=\"st_table\">\n                                        {\n                                            selectedRace() &&\n                                            <div className=\"st_row\">\n                                                <div className={'st_column'}><span>{selectedRace().Circuit.Location.locality}</span></div>                                    \n                                                <div className={'st_column'}><span>{selectedRace().Circuit.Location.country}</span></div>\n                                                <div className={'st_column'}><span>{selectedRace().date}</span></div>\n                                                <div className={'st_column'}>\n                                                        <span>{selectedRace().time ? selectedRace().time : \"No data\"} </span>\n                                                </div>\n                                                <div className={'st_column'}>\n                                                    <a href={selectedRace().Circuit.url} target={\"_blank\"}>\n                                                        Wikipedia\n                                                    </a>\n                                                </div>\n                                            </div>                                     \n                                        }\n                                    </div>\n                                </div>\n                            </div>                                                                             \n                        </TabPanel>                        \n                    </Tabs>\n\n\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nexport default class SelectYear extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            yearsCircuits: []\n        };\n    }\n\n    \n    componentWillMount() {\n        fetch('https://ergast.com/api/f1/seasons.json?limit=100')\n          .then((response) => {\n            return response.json()\n          })\n          .then((yearsCircuits) => {\n            const sortedYears = yearsCircuits.MRData.SeasonTable.Seasons.reverse();\n            this.setState({ yearsCircuits: sortedYears})\n            })\n        }   \n        \n        \n        \n        \n        getOptions = () => {\n\n            const options = [...this.state.yearsCircuits].map((field) => {\n                return ({\n                    value: field.season, \n                    label: field.season\n                })\n            });\n            return options;\n        }\n        \n        \n        \n        \n        render() {\n            const options = this.getOptions();\n            return (\n            <div>\n                {!!options[0] &&\n                    <div className={\"select-year\"}>\n                        <Select \n                            options={options}     \n                            defaultValue={options[0]}\n                            onChange={e => {\n                                this.props.handleYearChange({target:{value: e.value}});\n                                this.props.handleResetZoom();\n                            }\n                            }      \n                        />\n                    </div>\n\n                }\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from 'react';\n\nimport SelectYear from '../select-year/select-year';\nimport logo from '../../images/logo-w.png';\n\nexport default class Content extends Component {\n\n\n    render() {\n        return (\n            <div>\n                <div className={\"header\"}>\n                    <img src={logo} alt=\"Logo\" />\n                    <SelectYear year={this.props.year} handleYearChange={this.props.handleYearChange} handleResetZoom={this.props.handleResetZoom}/>\n                </div>\n                \n                            \n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from 'react';\n\n\nexport default class Carousel extends Component {\n    constructor(props) {\n        super(props);\n        this.handleClickCarousel = this.props.handleClickCarousel.bind(this);\n    }\n    \n\n\n    render() {\n        const { races, round, setActiveRound } = this.props;\n        return (\n            <div>\n                <div className={\"carousel\"}>\n                    <ul>\n                        {races.map((race, index) => {\n                            return (\n                                <li key={index}>\n                                    <span \n                                    className={round === race.round ? \"active\" : \"\"}\n                                    onClick={(e) => {\n                                        this.handleClickCarousel(race.Circuit.Location)\n                                        setActiveRound(race.round)\n                                    }\n                                        }>\n                                        {race.round}- {race.raceName}\n                                    </span>\n                                </li>                                     \n                            )\n                        })\n                        }                          \n                    </ul>\n                </div>\n                \n                            \n            </div>\n        );\n    }\n}\n\n\n\n","import React from 'react';\nimport './App.scss';\n\nimport Map from './components/map/map';\nimport Content from './components/content/content';\nimport Header from './components/header/header';\nimport Carousel from './components/carousel/carousel';\n\n\n\n\nclass App extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      year: '2019',\n      races: [],\n      pilots: [],\n      qualifyings: [],\n      circuits: [],\n      circuitsYears: [],\n      results: [],\n      clickCircuit: undefined,\n      zoomLevel: 2.2,\n      mapCenter: [22.9837669, -10.2810849],\n      round: 0\n    }\n    this.handleClickCarousel = this.handleClickCarousel.bind(this);\n    this.handleClickMarker = this.handleClickMarker.bind(this);\n  }\n  \n  componentDidMount(){\n    this.getData();\n  }\n  \n  componentDidUpdate(prevProps, prevState){\n    if(this.state.year !== prevState.year){\n      this.getData();\n    }\n  }\n  \n  \n\n  getData(){\n    this.getListCircuits();\n    this.getYearCircuits();\n    this.getRaces();  \n    this.getPilots();\n    this.getQualifyings();      \n  }\n\n  getListCircuits() {\n    fetch('https://ergast.com/api/f1/' + this.state.year + '.json?limit=100')\n      .then((response) => {\n        return response.json()\n      })\n      .then((yearsCircuits) => {\n        this.setState({ circuitsYears: yearsCircuits.MRData.RaceTable.Races})\n      })\n  }\n\n  getYearCircuits () {\n    fetch('https://ergast.com/api/f1/' + this.state.year + '/circuits.json?limit=100')\n        .then((response) => {\n        return response.json()\n        })\n        .then((resultados) => {\n        this.setState({ circuits: resultados.MRData.CircuitTable.Circuits})\n    })\n  }\n\n  getRaces () {\n    fetch('https://ergast.com/api/f1/' + this.state.year + '.json?limit=100')\n        .then((response) => {\n        return response.json()\n        })\n        .then((resultados) => {\n        this.setState({ races: resultados.MRData.RaceTable.Races})\n    })\n  }\n\n  \n\n  getPilots () {\n    console.log(\"getPilots\", this.state.year, this.state.round);\n    fetch('https://ergast.com/api/f1/' + this.state.year + '/' + this.state.round + '/results.json')\n        .then((response) => {\n        return response.json()\n        })\n        .then((resultados) => {\n        this.setState({ pilots: resultados.MRData.RaceTable.Races[0].Results})\n    })\n  }\n\n\n  getQualifyings () {\n    fetch('https://ergast.com/api/f1/' + this.state.year + '/' + this.state.round + '/qualifying.json')\n        .then((response) => {\n        return response.json()\n        })\n        .then((resultados) => {\n          const isQualifyingResults = !!resultados.MRData.RaceTable.Races[0];\n          this.setState({ qualifyings: isQualifyingResults ? resultados.MRData.RaceTable.Races[0].QualifyingResults : \"\"})\n    })\n  }  \n\n\n\nhandleYearChange = event => {\n  const year = event.target.value;\n  this.setState({ year });\n}\n\nsetMapCenter = (zoomLevel, mapCenter) => {\n  this.setState({\n    zoomLevel, \n    mapCenter\n  })\n}\n\nhandleResetZoom = () => {\n  this.setState({ \n      zoomLevel: 2.2,\n      mapCenter: [36.9837669, -10.2810849],\n      round: 0\n  });\n}\n\nhandleClickMarker(e, round){        \n    const { latlng } = e;\n    const { lat, lng } = latlng;\n    this.setMapCenter(15, [lat, lng] );\n    this.setState({\n      round\n    }, () => {\n      this.getPilots();\n      this.getQualifyings();\n    })\n}\n\nhandleClickCarousel({lat, long}){        \n  this.setMapCenter(15, [lat, long]);\n  // this.getPilots();\n  // this.getQualifyings();\n}\n\n\nsetActiveRound = (round) => {\n  this.setState({round});\n}\n\n\n  render (){\n    const { year, round, circuits, races, pilots, qualifyings, zoomLevel, mapCenter } = this.state;    \n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Header handleYearChange={this.handleYearChange} handleResetZoom={this.handleResetZoom} />\n          <Map \n            year={year} \n            circuits={circuits} \n            races={races}\n            handleResetZoom={this.handleResetZoom} \n            zoomLevel={ zoomLevel} \n            mapCenter={ mapCenter } \n            setMapCenter={this.setMapCenter}\n            handleClickMarker={this.handleClickMarker}\n            round={round}\n            setActiveRound={this.setActiveRound}\n          /> \n          <Content \n            round={round}\n            pilots={pilots} \n            qualifyings={qualifyings} \n            races={races}\n          />           \n          <Carousel \n            races={races}\n            handleClickMarker={this.handleClickMarker}\n            handleClickCarousel={this.handleClickCarousel}\n            round={round}\n            setActiveRound={this.setActiveRound}\n          />\n        </header>      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('mount'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}