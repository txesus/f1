{"version":3,"sources":["images/wiki.png","images/logo-w.png","components/carousel/carousel.js","components/map/map.js","components/content/content.js","components/select-year/select-year.js","components/header/header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Carousel","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickCarousel","bind","assertThisInitialized","_this2","_this$props","races","round","setActiveRound","getCountryFlagFromName","react_default","a","createElement","className","map","race","index","key","onClick","e","Circuit","Location","class","Component","mapStyled","CircuitMap","getMapStyles","year","state","handleResetZoom","handleClickMarker","zoomLevel","mapCenter","Map","ref","center","zoom","TileLayer","attribution","url","parseInt","text","L","divIcon","html","Fragment","Marker","icon","position","lat","long","Popup","raceName","locality","country","href","target","control_default","style","marginLeft","marginTop","zIndex","carousel_Carousel","src","wiki","alt","Content","pilots","qualifyings","getCountryFlagFromDemonym","selectedRace","filter","console","log","esm","pilot","Driver","nationality","familyName","Constructor","name","Time","time","status","points","qualifying","Q1","Q2","Q3","date","SelectYear","getOptions","toConsumableArray","yearsCircuits","field","value","season","label","fetch","then","response","json","sortedYears","MRData","SeasonTable","Seasons","reverse","setState","_this3","options","react_select_browser_esm","defaultValue","onChange","handleYearChange","logo","select_year_SelectYear","App","demonym","matchCountry","countries","find","toLowerCase","flag","event","setMapCenter","circuits","circuitsYears","results","clickCircuit","undefined","getData","prevProps","prevState","getListCircuits","getYearCircuits","getRaces","getPilots","getQualifyings","getCountries","RaceTable","Races","resultados","CircuitTable","Circuits","_this4","_this5","Results","_this6","isQualifyingResults","QualifyingResults","_this7","altSpellings","_this8","latlng","lng","_ref","_this$state","header_Content","map_CircuitMap","content_Content","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7833ab07.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wiki.88ed8a0b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-w.c1ad6f31.png\";","import React, { Component } from 'react';\n\n\nexport default class Carousel extends Component {\n    constructor(props) {\n        super(props);\n        this.handleClickCarousel = this.props.handleClickCarousel.bind(this);\n    }\n    \n\n\n    render() {\n        const { races, round, setActiveRound, getCountryFlagFromName } = this.props;\n        return (\n            <div>\n                <div className={\"carousel\"}>\n                    <ul className={'progress'}>\n                        {races.map((race, index) => {\n                            return (\n                                <li \n                                    key={index} \n                                    className={round === race.round ? \"active\" : \"\"}\n                                    onClick={(e) => {\n                                        this.handleClickCarousel(race.Circuit.Location)\n                                        setActiveRound(race.round)\n                                        }\n                                    }\n                                    >\n                                    {/* <input class='radio' type='radio' checked={round === race.round ? 'checked' : \"\"}></input> */}\n                                    <div class=\"relative\">\n                                        {/* <div className={'box-image'}>\n                                            <img src={getCountryFlagFromName(race.Circuit.Location.country)} />\n                                        </div> */}\n                                        <span \n                                            className={round === race.round ? \"details active\" : \"details\"}>\n                                                {/* {race.round} - {race.raceName} */}\n                                                {race.round}\n                                            </span>\n\n                                        {/* <span class='circle'></span> */}\n                                    </div>\n\n                                </li>                                     \n                            )\n                        })\n                        }                          \n                    </ul>                    \n                </div>\n                \n                            \n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from 'react';\nimport { Map, TileLayer, Marker, Popup } from 'react-leaflet';\nimport Control from 'react-leaflet-control';\nimport wiki from '../../images/wiki.png';\nimport L from 'leaflet';\n\nimport Carousel from '../carousel/carousel'\n\n\n// MAP STYLES\n\n// 1950\nconst fiftyStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck70xfbac03ik1irtiv3q29vp/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// 1960\nconst sixtyStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck73izmsr2bkh1inhs7yrxrv6/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// 1970\nconst seventyStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck73jms8z2c6p1inh6yu5krp1/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n//1980\nconst eightyStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck73jp92g2cb01iqwmgk74gw9/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// 1990\nconst ninetyStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck73jk5410aoz1imwgf0lx62u/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n// 2000\nconst thousandStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck6sg2kb86pin1it43e343zsz/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\n\n//BLUE\n// const mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/cjna67hy23vcf2rppfpvoj24q/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\n\n// DEFAULT\n\n// const mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/cjna67hy23vcf2rppfpvoj24q/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\nconst mapStyled = 'https://api.mapbox.com/styles/v1/jesusesteban/ck8hh5aar057y1ioh7udmpcpo/tiles/256/{z}/{x}/{y}@2x?access_token=pk.eyJ1IjoiamVzdXNlc3RlYmFuIiwiYSI6ImNqc3VlY3EydTAxdDMzeXB2a2NycXJxZTIifQ.6Jxvu3C-J7-XWRjCVdMwdw';\n\nexport default class CircuitMap extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = { \n            races: []\n        };\n        this.props.handleResetZoom();\n        this.handleClickMarker = this.props.handleClickMarker.bind(this);\n        this.handleClickCarousel = this.props.handleClickCarousel.bind(this);\n    }\n\n\n    componentDidMount() {\n        // const leafletMap = this.leafletMap.leafletElement;\n        // leafletMap.on('zoomend', () => {\n        //     const updatedZoomLevel = leafletMap.getZoom();\n        //     this.handleZoomLevelChange(updatedZoomLevel);\n        // });     \n    }\n\n    getMapStyles = (year) =>{\n        let style = \"\";\n        switch (true){\n            // case year <= 1959:\n            //     style = fiftyStyled;\n            // break;\n            // case year >= 1960 && year <= 1969:\n            //     style = sixtyStyled;\n            // break;\n            // case year >= 1970 && year <= 1979:\n            //     style = seventyStyled;\n            // break;\n            // case year >= 1980 && year <= 1989:\n            //     style = eightyStyled;\n            // break;\n            // case year >= 1990 && year <= 1999:\n            //     style = ninetyStyled;\n            // break;\n            // case year >= 2000 && year <= 2009:\n            //     style = thousandStyled;\n            // break;\n            // case year >= 2010 && year <= 2019:\n            //     style = mapStyled;\n            // break;\n            // case year >= 2020 && year <= 2029:\n            //     style = mapStyled;\n            // break;\n            default:\n                style = mapStyled;\n            break;\n        }\n        return style;\n    }\n\n\n    // getPolyLineArray() {\n    //     const circuitsCoordinates = this.props.circuits.map(circuit => {\n    //         return [circuit.Location.lat, circuit.Location.long];\n    //     });\n    //     return circuitsCoordinates;\n    // }\n\n        \n    render() {\n        const { races, zoomLevel, mapCenter, handleResetZoom, round, year, setActiveRound, handleClickMarker, handleClickCarousel, getCountryFlagFromName} = this.props;\n        return (\n            <div>\n                <Map\n                    ref={(ref) => { this.map = ref; }}\n                    center={mapCenter}\n                    zoom={zoomLevel}\n                    className={round === 0 ? \"\" : \"show-content\"}\n                    >\n                <TileLayer\n                    attribution={\"Jesús Esteban\"}\n                    url={this.getMapStyles(parseInt(year))}\n                    />\n\n                {races.map((race) => {\n                    const text = L.divIcon({html: race.round});\n                    return (\n                        <React.Fragment>\n                            <Marker \n                                icon={text}\n                                position={[race.Circuit.Location.lat, race.Circuit.Location.long]}\n                                onClick={ e=>                                     \n                                    this.handleClickMarker(e, race.round)\n                                }   \n                            >\n                                <Popup>\n                                    <ul className={\"list-popup\"}>\n                                        <li className={\"title\"}><span>{race.raceName}</span></li>\n                                        <li>\n                                            <span>{race.Circuit.Location.locality} </span>\n                                            /\n                                            <span> {race.Circuit.Location.country}</span>\n                                        </li>\n                                        <li><a href={race.Circuit.url} target={\"_blank\"}>Wikipedia</a></li>\n                                    </ul>\n                                    \n                                </Popup>\n                            </Marker>     \n                        </React.Fragment>                        \n                    )\n                    })\n                }                \n\n                {/* <Polyline color=\"#F1C40F\"  weight=\"1\" positions={this.getPolyLineArray()}/> */}\n\n                {/* <Control position=\"topleft\">\n                    <div>\n                        <div style={{ marginLeft: '0px', marginTop: '20px', zIndex: '0' }}>\n                            <input className={'switch'} type=\"checkbox\" id=\"switch\" /><label for=\"switch\">Toggle</label>\n                        </div>\n                    </div>\n                </Control> */}\n\n\n                <Control position=\"topright\">\n                    <div>\n                        <div style={{ marginLeft: '37px', marginTop: '110px', zIndex: '0' }}>\n                            <button onClick={() => handleResetZoom()}>\n                                Reset\n                            </button>                            \n                        </div>\n                    </div>\n                </Control>\n                <Carousel \n                    races={races}\n                    handleClickMarker={handleClickMarker}\n                    handleClickCarousel={handleClickCarousel}\n                    round={round}\n                    setActiveRound={setActiveRound}\n                    getCountryFlagFromName={getCountryFlagFromName}\n                />\n                </Map>\n                \n                <img src={wiki} alt=\"wiki\" className=\"img-wiki\"/>\n                \n            </div>\n        );\n    }\n}\n\n\n\n\n\n\n\n// Recursos\n// https://towardsdatascience.com/creating-a-bubbles-map-using-react-leaflet-e75124ca1cd2\n// Ejemplos de mapas https://leaflet-extras.github.io/leaflet-providers/preview/\n// https://github.com/humangeo/leaflet-dvf/wiki/2.-Examples\n// http://www.liedman.net/leaflet-routing-machine/\n// http://rowanwins.github.io/leaflet-easyPrint/\n// https://github.com/dwilhelm89/Leaflet.StyleEditor\n// COLORES POR DECADA https://juiceboxinteractive.com/blog/color/\n\n// 1960\n// 207 73 23\n// 249 176 61\n// 117 140 51\n// 152 89 20\n// 208 178 133\n// 45 117 140\n\n\n// https://jsbin.com/jisuweyaju/edit?html,output\n// https://blog.mapbox.com/map-madness-round-3-f5536000fdbb\n// https://wrld3d.com/wrld.js/latest/docs/examples/embedding-a-3d-map/\n// https://medium.com/@alexandervarlamov/using-mapbox-gl-js-custom-maps-with-tableau-and-powerbi-41c002d4617e","import React, { Component } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nexport default class Content extends Component {\n\n    render() {\n        const { pilots, races, qualifyings, round, getCountryFlagFromDemonym } = this.props;\n        // console.log(\"RACES\", races);\n        // console.log(\"round\", round);\n        // console.log(\"pilots\", pilots);\n        // console.log(\"qualifyg\", qualifyings);\n\n\n        const selectedRace = () => {\n            const raceRound = races.filter((race, index) => {\n                return race.round === round;\n            });\n            return raceRound[0];\n        }\n\n        console.log(\"RACESSSS\", races)\n        return (\n            <div className={round === 0 ? \"content\" : \"content show-content\"}>\n                <div className={\"content-box\"}>\n\n                    <div className={\"arrows\"}>\n                        <span>Prev</span>\n                        <span>Next</span>\n                    </div>                            \n\n                    <div className={\"title-content\"}>\n                        { selectedRace() &&\n                            <h2>{selectedRace().raceName}</h2>\n                        }\n                    </div>\n\n\n                    <Tabs>\n                        <TabList>\n                            <Tab>Race Result</Tab>\n                            <Tab>Qualifying Results</Tab>\n                            <Tab>Circuit info</Tab>\n                        </TabList>\n\n                        <TabPanel>\n                            <div className={'st_viewport'}>\n                                <div className={'st_wrap_table'}>\n                                    <header className={'st_table_header'}>\n                                        <div className=\"st_row\">\n                                            <div className={'st_column'}><span>Pos.</span></div>\n                                            <div className={'st_column'}><span>Name</span></div>\n                                            <div className={'st_column'}><span>Constructor</span></div>\n                                            <div className={'st_column'}><span>Time</span></div>\n                                            <div className={'st_column'}><span>Status</span></div>\n                                            <div className={'st_column'}><span>Points</span></div>\n                                        </div>\n                                    </header>\n                                    <div className=\"st_table\">\n                                        {pilots.map((pilot, index) => {                                        \n                                            // console.log(\"FLAGGGG\", getCountryFlagFromDemonym(pilot.Driver.nationality))\n                                            return (\n                                                <div className=\"st_row\" key={index}>\n                                                    <div className={'st_column'}><span>{pilot.position}.</span></div>                                    \n                                                    <div className={'st_column'}>\n                                                        <img src={getCountryFlagFromDemonym(pilot.Driver.nationality)} alt={'country'} />\n                                                        <a href={pilot.Driver.url} target={\"_blank\"}>\n                                                            {pilot.Driver.familyName}\n                                                            {/* {pilot.Driver.givenName} {pilot.Driver.familyName} */}\n                                                        </a>                                                    \n                                                    </div>\n\n                                                    <div className={'st_column'}><span>{pilot.Constructor.name}</span></div>\n\n                                                    <div className={'st_column'}>\n                                                        { !!pilot.Time ?\n                                                            <span>{pilot.Time.time}</span>\n                                                            :\n                                                            \"\"\n                                                        }\n                                                    </div>                             \n                                                    <div className={'st_column'}><span>{pilot.status}</span></div>                   \n                                                    <div className={'st_column'}><span>{pilot.points}</span></div>\n                                                </div>                                     \n                                            )\n                                        })\n                                        }       \n                                    </div>\n                                </div>\n                            </div>\n                            \n                        </TabPanel>\n                            <TabPanel>\n                        { qualifyings ?\n                                <div className={'st_viewport'}>\n                                    <div className={'st_wrap_table'}>\n                                        <header className={'st_table_header'}>\n                                            <div className=\"st_row\">\n                                                <div className={'st_column'}><span>Pos.</span></div>\n                                                <div className={'st_column'}><span>Name</span></div>\n                                                <div className={'st_column'}><span>Q1</span></div>\n                                                <div className={'st_column'}><span>Q2</span></div>\n                                                <div className={'st_column'}><span>Q3</span></div>\n                                            </div>\n                                        </header>\n                                        <div className=\"st_table\">\n                                            {qualifyings.map((qualifying, index) => {                                        \n                                                // console.log(\"QUA\", qualifying);\n                                                return (\n                                                    <div className=\"st_row\" key={index}>\n                                                        <div className={'st_column'}><span>{qualifying.position}</span></div>                                    \n                                                        <div className={'st_column'}>\n                                                        <img src={getCountryFlagFromDemonym(qualifying.Driver.nationality)} alt={'country'} />\n                                                            <a href={qualifying.Driver.url} target={\"_blank\"}>\n                                                                {qualifying.Driver.familyName}\n                                                            </a>                                                  \n                                                        </div>\n\n                                                        <div className={'st_column'}><span>{qualifying.Q1}</span></div>\n                                                        <div className={'st_column'}><span>{qualifying.Q2}</span></div>\n                                                        <div className={'st_column'}><span>{qualifying.Q3}</span></div>\n                                                    </div>                                     \n                                                )\n                                            })\n                                            }       \n                                        </div>\n                                    </div>\n                                </div>                            \n                                :\n                                <div>No data results</div>\n                        }\n                            </TabPanel>\n                        <TabPanel>\n                        <div className={'st_viewport'}>\n                                <div className={'st_wrap_table'}>\n                                    <header className={'st_table_header'}>\n                                        <div className=\"st_row\">\n                                            <div className={'st_column'}><span>Locality</span></div>\n                                            <div className={'st_column'}><span>Country</span></div>\n                                            <div className={'st_column'}><span>Date</span></div>\n                                            <div className={'st_column'}><span>Hour</span></div>\n                                            <div className={'st_column'}><span>More info</span></div>\n                                        </div>\n                                    </header>\n                                    <div className=\"st_table\">\n                                        {\n                                            selectedRace() &&\n                                            <div className=\"st_row\">\n                                                <div className={'st_column'}><span>{selectedRace().Circuit.Location.locality}</span></div>                                    \n                                                <div className={'st_column'}><span>{selectedRace().Circuit.Location.country}</span></div>\n                                                <div className={'st_column'}><span>{selectedRace().date}</span></div>\n                                                <div className={'st_column'}>\n                                                        <span>{selectedRace().time ? selectedRace().time : \"No data\"} </span>\n                                                </div>\n                                                <div className={'st_column'}>\n                                                    <a href={selectedRace().Circuit.url} target={\"_blank\"}>\n                                                        Wikipedia\n                                                    </a>\n                                                </div>\n                                            </div>                                     \n                                        }\n                                    </div>\n                                </div>\n                            </div>                                                                             \n                        </TabPanel>                        \n                    </Tabs>\n\n\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from 'react';\nimport Select from 'react-select';\n\nexport default class SelectYear extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            yearsCircuits: []\n        };\n    }\n\n    \n    componentWillMount() {\n        fetch('https://ergast.com/api/f1/seasons.json?limit=100')\n          .then((response) => {\n            return response.json()\n          })\n          .then((yearsCircuits) => {\n            const sortedYears = yearsCircuits.MRData.SeasonTable.Seasons.reverse();\n            this.setState({ yearsCircuits: sortedYears})\n            })\n        }   \n        \n        \n        \n        \n        getOptions = () => {\n\n            const options = [...this.state.yearsCircuits].map((field) => {\n                return ({\n                    value: field.season, \n                    label: field.season\n                })\n            });\n            return options;\n        }\n        \n        \n        \n        \n        render() {\n            const options = this.getOptions();\n            return (\n            <div>\n                {!!options[0] &&\n                    <div className={\"select-year\"}>\n                        <Select \n                            options={options}     \n                            defaultValue={options[0]}\n                            onChange={e => {\n                                this.props.handleYearChange({target:{value: e.value}});\n                                this.props.handleResetZoom();\n                            }\n                            }      \n                        />\n                    </div>\n\n                }\n            </div>\n        );\n    }\n}\n\n\n\n","import React, { Component } from 'react';\n\nimport SelectYear from '../select-year/select-year';\nimport logo from '../../images/logo-w.png';\n\nexport default class Content extends Component {\n\n\n    render() {\n        return (\n            <div>\n                <div className={\"header\"}>\n                    <img src={logo} alt=\"Logo\" />\n                    <SelectYear year={this.props.year} handleYearChange={this.props.handleYearChange} handleResetZoom={this.props.handleResetZoom}/>\n                </div>\n                \n                            \n            </div>\n        );\n    }\n}\n\n\n\n","import React from 'react';\nimport './App.scss';\n\nimport Map from './components/map/map';\nimport Content from './components/content/content';\nimport Header from './components/header/header';\nimport Carousel from './components/carousel/carousel';\n\n\n\n\nclass App extends React.Component {\n\n  constructor(){\n    super()\n    this.state = {\n      year: '2019',\n      races: [],\n      pilots: [],\n      qualifyings: [],\n      circuits: [],\n      circuitsYears: [],\n      results: [],\n      clickCircuit: undefined,\n      zoomLevel: 2.2,\n      mapCenter: [22.9837669, -10.2810849],\n      round: 0,\n      countries: []\n    }\n    this.handleClickCarousel = this.handleClickCarousel.bind(this);\n    this.handleClickMarker = this.handleClickMarker.bind(this);\n  }\n  \n  componentDidMount(){\n    this.getData();\n  }\n  \n  componentDidUpdate(prevProps, prevState){\n    if(this.state.year !== prevState.year){\n      this.getData();\n    }\n  }\n  \n  \n\n  getData(){\n    this.getListCircuits();\n    this.getYearCircuits();\n    this.getRaces();  \n    this.getPilots();\n    this.getQualifyings();   \n    this.getCountries();\n  }\n\n  getListCircuits() {\n    fetch('https://ergast.com/api/f1/' + this.state.year + '.json?limit=100')\n      .then((response) => {\n        return response.json()\n      })\n      .then((yearsCircuits) => {\n        this.setState({ circuitsYears: yearsCircuits.MRData.RaceTable.Races})\n      })\n  }\n\n  getYearCircuits () {\n    fetch('https://ergast.com/api/f1/' + this.state.year + '/circuits.json?limit=100')\n        .then((response) => {\n        return response.json()\n        })\n        .then((resultados) => {\n        this.setState({ circuits: resultados.MRData.CircuitTable.Circuits})\n    })\n  }\n\n  getRaces () {\n    fetch('https://ergast.com/api/f1/' + this.state.year + '.json?limit=100')\n        .then((response) => {\n        return response.json()\n        })\n        .then((resultados) => {\n        this.setState({ races: resultados.MRData.RaceTable.Races})\n    })\n  }\n\n  \n\n  getPilots () {\n    // console.log(\"getPilots\", this.state.year, this.state.round);\n    fetch('https://ergast.com/api/f1/' + this.state.year + '/' + this.state.round + '/results.json')\n        .then((response) => {\n        return response.json()\n        })\n        .then((resultados) => {\n        this.setState({ pilots: resultados.MRData.RaceTable.Races[0].Results})\n    })\n  }\n\n\n  getQualifyings () {\n    fetch('https://ergast.com/api/f1/' + this.state.year + '/' + this.state.round + '/qualifying.json')\n        .then((response) => {\n        return response.json()\n        })\n        .then((resultados) => {\n          const isQualifyingResults = !!resultados.MRData.RaceTable.Races[0];\n          this.setState({ qualifyings: isQualifyingResults ? resultados.MRData.RaceTable.Races[0].QualifyingResults : \"\"})\n    })\n  }  \n\n\n  getCountries () {\n    fetch('https://restcountries.eu/rest/v2')\n        .then((response) => {\n          return response.json()\n        })\n        .then((resultados) => {\n          const countries = resultados.map( (country) => {\n            return (\n              {\n                demonym: country.demonym,\n                flag: country.flag,\n                name: country.name,\n                altSpellings: country.altSpellings\n              }\n            )\n          })\n          console.log(\"COUNTRIES\", countries)\n          this.setState({ countries})\n    })\n  }    \n\n  getCountryFlagFromDemonym = (demonym) => {\n    const matchCountry = this.state.countries.find((country) => {\n        if(country.demonym.toLowerCase() === \"argentinean\"){\n          return demonym.toLowerCase() === \"argentine\";  \n        }\n        return demonym.toLowerCase() === country.demonym.toLowerCase();\n    })\n    return matchCountry ? matchCountry.flag : \"src/images/marker.png\";\n  }\n  \n  getCountryFlagFromName = (name) => {\n    // const matchCountry = this.state.countries.find((country) => {\n    //   if(country.name.toLowerCase() === \"united kingdom of great britain and northern ireland\"){\n    //     return name.toLowerCase() === \"uk\";  \n    //   }\n    //   const recoverySpelling = country.altSpellings.find((spelling) => {\n    //     console.log(\"SEPELLING\", spelling)\n    //     return name.toLowerCase() === spelling.toLowerCase()\n    //   });\n    //   return name.toLowerCase() === (recoverySpelling ? recoverySpelling.toLowerCase() : \"\");\n    // })\n    // return matchCountry ? matchCountry.flag : name;\n    const matchCountry = this.state.countries.find((country) => {\n      \n      switch (country.name.toLowerCase()) {\n        case \"united kingdom of great britain and northern ireland\":\n          return name.toLowerCase() === \"uk\";\n        case \"russian federation\":\n          return name.toLowerCase() === \"russia\";\n        case \"united states of america\":\n          return name.toLowerCase() === \"usa\";\n        case \"united arab emirates\":\n          return name.toLowerCase() === \"uae\";\n        case \"korea (republic of)\":\n          return name.toLowerCase() === \"korea\";\n        \n        default:\n          return name.toLowerCase() === country.name.toLowerCase();\n      }\n      \n  })\n  return matchCountry ? matchCountry.flag : name;\n\n\n\n  }\n\n\n\n\nhandleYearChange = event => {\n  const year = event.target.value;\n  this.setState({ year });\n}\n\nsetMapCenter = (zoomLevel, mapCenter) => {\n  this.setState({\n    zoomLevel, \n    mapCenter\n  })\n}\n\nhandleResetZoom = () => {\n  this.setState({ \n      zoomLevel: 2.2,\n      mapCenter: [36.9837669, -10.2810849],\n      round: 0\n  });\n}\n\nhandleClickMarker(e, round){        \n    const { latlng } = e;\n    const { lat, lng } = latlng;\n    this.setMapCenter(15, [lat, lng] );\n    this.setState({\n      round\n    }, () => {\n      this.getPilots();\n      this.getQualifyings();\n    })\n}\n\nhandleClickCarousel({lat, long}){        \n  this.setMapCenter(15, [lat, long]);\n  // this.getPilots();\n  // this.getQualifyings();\n}\n\n\nsetActiveRound = (round) => {\n  this.setState({round});\n}\n\n\n  render (){\n    const { year, round, circuits, races, pilots, qualifyings, zoomLevel, mapCenter } = this.state;    \n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Header handleYearChange={this.handleYearChange} handleResetZoom={this.handleResetZoom} />\n          <Map \n            year={year} \n            circuits={circuits} \n            races={races}\n            handleResetZoom={this.handleResetZoom} \n            zoomLevel={ zoomLevel} \n            mapCenter={ mapCenter } \n            setMapCenter={this.setMapCenter}\n            handleClickMarker={this.handleClickMarker}\n            round={round}\n            setActiveRound={this.setActiveRound}\n            handleClickCarousel={this.handleClickCarousel}\n            getCountryFlagFromName={this.getCountryFlagFromName}\n          /> \n          <Content \n            round={round}\n            pilots={pilots} \n            qualifyings={qualifyings} \n            races={races}\n            getCountryFlagFromDemonym={this.getCountryFlagFromDemonym}\n            // getCountryFlagFromName={this.getCountryFlagFromName}\n          />           \n          {/* <Carousel \n            races={races}\n            handleClickMarker={this.handleClickMarker}\n            handleClickCarousel={this.handleClickCarousel}\n            round={round}\n            setActiveRound={this.setActiveRound}\n          /> */}\n        </header>      \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('mount'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}